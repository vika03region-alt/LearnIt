
import { storage } from '../storage';
import { aiContentService } from './aiContent';
import { viralGrowthEngine } from './viralGrowthEngine';

interface TelegramChannelData {
  channelId: string;
  title: string;
  subscribers: number;
  posts: number;
  engagement: number;
}

interface PromotionTestResult {
  contentGenerated: string[];
  viralScore: number;
  expectedGrowth: {
    subscribers: number;
    engagement: number;
    reach: number;
  };
  recommendations: string[];
}

class TelegramTestPromotion {
  private channelData: TelegramChannelData = {
    channelId: 'IIPRB',
    title: 'IIPRB Channel',
    subscribers: 0, // –ë—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    posts: 0,
    engagement: 0,
  };

  // === –ê–ù–ê–õ–ò–ó –°–£–©–ï–°–¢–í–£–Æ–©–ï–ì–û –ö–ê–ù–ê–õ–ê ===
  
  async analyzeChannel(channelUrl: string = 'https://t.me/IIPRB'): Promise<TelegramChannelData> {
    console.log('üîç –ê–Ω–∞–ª–∏–∑ Telegram –∫–∞–Ω–∞–ª–∞:', channelUrl);

    // –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞–Ω–∞–ª–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ Telegram API)
    const analysisResult = {
      channelId: 'IIPRB',
      title: 'IIPRB - Trading & Investment',
      subscribers: Math.floor(Math.random() * 500) + 100, // 100-600 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
      posts: Math.floor(Math.random() * 50) + 20, // 20-70 –ø–æ—Å—Ç–æ–≤
      engagement: Math.random() * 15 + 5, // 5-20% –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å
    };

    this.channelData = analysisResult;
    return analysisResult;
  }

  // === –ì–ï–ù–ï–†–ê–¶–ò–Ø –¢–ï–°–¢–û–í–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê ===
  
  async generateTestContent(contentType: 'trading_signal' | 'market_analysis' | 'educational' = 'trading_signal'): Promise<string[]> {
    console.log('üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Telegram...');

    const contentPrompts = {
      trading_signal: [
        'BTC/USDT: –°–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤—ã—à–µ $45,000. –¶–µ–ª–∏: $46,500, $47,200, $48,000. –°—Ç–æ–ø: $44,200',
        'EUR/USD: –ü—Ä–æ—Ä—ã–≤ —É—Ä–æ–≤–Ω—è 1.0850. –ü–æ–∫—É–ø–∫–∞ —Å —Ü–µ–ª—è–º–∏ 1.0900 –∏ 1.0950. –†–∏—Å–∫: 1.0820',
        'GOLD: –û—Ç—Å–∫–æ–∫ –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ $2010. –¶–µ–ª–∏ —Ä–æ—Å—Ç–∞: $2035, $2050. –°—Ç–æ–ø-–ª–æ—Å—Å: $2005'
      ],
      market_analysis: [
        '–û–±–∑–æ—Ä —Ä—ã–Ω–∫–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: BTC –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è, EUR/USD –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –ø—Ä–æ—Ä—ã–≤—É, –Ω–µ—Ñ—Ç—å —Ä–∞—Å—Ç–µ—Ç',
        '–í–∞–∂–Ω—ã–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏: —Ä–µ—à–µ–Ω–∏–µ –§–†–°, –¥–∞–Ω–Ω—ã–µ –ø–æ –∏–Ω—Ñ–ª—è—Ü–∏–∏, –æ—Ç—á–µ—Ç—ã –∫–æ–º–ø–∞–Ω–∏–π',
        '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç–æ–ø-5 –∞–∫—Ç–∏–≤–æ–≤: —É—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∏ —Ç–æ—Ä–≥–æ–≤—ã–µ –∏–¥–µ–∏'
      ],
      educational: [
        '–£—Ä–æ–∫ ‚Ññ1: –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ç—Ä–µ–Ω–¥ –∏ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞ –≤ –ø–æ–∑–∏—Ü–∏—é',
        '–†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç: –∑–æ–ª–æ—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–æ–º –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥–µ',
        '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è —Ç—Ä–µ–π–¥–∏–Ω–≥–∞: –∫–∞–∫ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —ç–º–æ—Ü–∏–∏ –ø—Ä–∏ —Ç–æ—Ä–≥–æ–≤–ª–µ'
      ]
    };

    const basePrompts = contentPrompts[contentType];
    const generatedContent: string[] = [];

    for (const prompt of basePrompts) {
      try {
        const result = await aiContentService.generateContent(
          prompt,
          contentType,
          ['telegram']
        );
        generatedContent.push(result.content);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
        generatedContent.push(prompt); // Fallback –∫ –±–∞–∑–æ–≤–æ–º—É –ø—Ä–æ–º–ø—Ç—É
      }
    }

    return generatedContent;
  }

  // === –í–ò–†–£–°–ù–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø ===
  
  async optimizeForViral(content: string): Promise<{
    optimizedContent: string;
    viralScore: number;
    improvements: string[];
  }> {
    console.log('üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏...');

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
    const viralMetrics = await viralGrowthEngine.analyzeViralPotential(content, 'telegram');
    
    // –£–ª—É—á—à–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    const improvements = [];
    let optimizedContent = content;

    // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
    if (viralMetrics.emotionalImpact < 70) {
      optimizedContent = `üö® –í–ê–ñ–ù–û! ${optimizedContent}`;
      improvements.push('–î–æ–±–∞–≤–ª–µ–Ω —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä');
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ä–æ—á–Ω–æ—Å—Ç—å
    if (viralMetrics.timeliness < 60) {
      optimizedContent += '\n\n‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç —Å–µ–≥–æ–¥–Ω—è!';
      improvements.push('–î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ä–æ—á–Ω–æ—Å—Ç—å');
    }

    // –î–æ–±–∞–≤–ª—è–µ–º call-to-action
    if (!content.includes('–ø–æ–¥–ø–∏—à–∏—Å—å') && !content.includes('–ø–æ–¥–µ–ª–∏—Å—å')) {
      optimizedContent += '\n\nüëÜ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏-—Ç—Ä–µ–π–¥–µ—Ä–∞–º–∏!';
      improvements.push('–î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é');
    }

    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
    const newViralScore = await viralGrowthEngine.analyzeViralPotential(optimizedContent, 'telegram');
    const averageScore = Object.values(newViralScore).reduce((sum, val) => sum + val, 0) / 5;

    return {
      optimizedContent,
      viralScore: averageScore,
      improvements,
    };
  }

  // === –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í–û–ô –ö–ê–ú–ü–ê–ù–ò–ò ===
  
  async runPromotionTest(userId: string): Promise<PromotionTestResult> {
    console.log('üéØ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è...');

    // 1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª
    const channelData = await this.analyzeChannel();
    
    // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    const tradingSignals = await this.generateTestContent('trading_signal');
    const marketAnalysis = await this.generateTestContent('market_analysis');
    const educational = await this.generateTestContent('educational');
    
    const allContent = [...tradingSignals, ...marketAnalysis, ...educational];

    // 3. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ª—É—á—à–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const optimizedContent: string[] = [];
    let totalViralScore = 0;

    for (const content of allContent.slice(0, 5)) { // –¢–æ–ø-5 –ø–æ—Å—Ç–æ–≤
      const optimized = await this.optimizeForViral(content);
      optimizedContent.push(optimized.optimizedContent);
      totalViralScore += optimized.viralScore;
    }

    const avgViralScore = totalViralScore / optimizedContent.length;

    // 4. –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º —Ä–æ—Å—Ç
    const expectedGrowth = this.calculateExpectedGrowth(channelData, avgViralScore);

    // 5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    const recommendations = this.generateRecommendations(channelData, avgViralScore);

    // 6. –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    await storage.createActivityLog({
      userId,
      action: 'Telegram Test Campaign',
      description: `–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è –¥–ª—è –∫–∞–Ω–∞–ª–∞ ${channelData.title}`,
      status: 'success',
      metadata: {
        channel: channelData,
        contentGenerated: optimizedContent.length,
        avgViralScore,
        expectedGrowth,
      },
    });

    return {
      contentGenerated: optimizedContent,
      viralScore: avgViralScore,
      expectedGrowth,
      recommendations,
    };
  }

  // === –ú–û–ù–ò–¢–û–†–ò–ù–ì –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ===
  
  async monitorResults(testId: string): Promise<{
    actualGrowth: {
      subscribers: number;
      engagement: number;
      reach: number;
    };
    performance: 'excellent' | 'good' | 'average' | 'poor';
    insights: string[];
  }> {
    console.log('üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏...');

    // –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–≤ production —á–µ—Ä–µ–∑ Telegram Analytics API)
    const actualGrowth = {
      subscribers: Math.floor(Math.random() * 50) + 10, // 10-60 –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
      engagement: Math.random() * 20 + 10, // 10-30% —Ä–æ—Å—Ç –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏
      reach: Math.floor(Math.random() * 500) + 200, // 200-700 –æ—Ö–≤–∞—Ç
    };

    let performance: 'excellent' | 'good' | 'average' | 'poor' = 'average';
    
    if (actualGrowth.subscribers > 40 && actualGrowth.engagement > 25) {
      performance = 'excellent';
    } else if (actualGrowth.subscribers > 25 && actualGrowth.engagement > 15) {
      performance = 'good';
    } else if (actualGrowth.subscribers < 15 && actualGrowth.engagement < 10) {
      performance = 'poor';
    }

    const insights = [
      `–ö–∞–Ω–∞–ª –ø–æ–∫–∞–∑–∞–ª ${performance} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã`,
      `–õ—É—á—à–µ –≤—Å–µ–≥–æ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã (+${Math.round(actualGrowth.engagement * 0.6)}% engagement)`,
      `–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: 9:00, 14:00, 19:00 –ú–°–ö`,
      '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
      '–î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–æ–ø—Ä–æ—Å—ã, –∫–Ω–æ–ø–∫–∏)',
    ];

    return {
      actualGrowth,
      performance,
      insights,
    };
  }

  // === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø (–°–ò–ú–£–õ–Ø–¶–ò–Ø) ===
  
  async simulatePosting(content: string[], channelId: string = 'IIPRB'): Promise<{
    posted: number;
    failed: number;
    postIds: string[];
  }> {
    console.log(`üì§ –°–∏–º—É–ª—è—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª @${channelId}...`);

    const results = {
      posted: 0,
      failed: 0,
      postIds: [] as string[],
    };

    for (let i = 0; i < content.length; i++) {
      const post = content[i];
      
      // –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (90% —É—Å–ø–µ—Ö–∞)
      if (Math.random() > 0.1) {
        const postId = `post_${Date.now()}_${i}`;
        results.postIds.push(postId);
        results.posted++;
        
        console.log(`‚úÖ –ü–æ—Å—Ç ${i + 1} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${post.substring(0, 50)}...`);
      } else {
        results.failed++;
        console.log(`‚ùå –ü–æ—Å—Ç ${i + 1} –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å`);
      }

      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø—É–±–ª–∏–∫–∞—Ü–∏—è–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000));
    }

    return results;
  }

  // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ ===
  
  private calculateExpectedGrowth(channelData: TelegramChannelData, viralScore: number): {
    subscribers: number;
    engagement: number;
    reach: number;
  } {
    const baseGrowth = channelData.subscribers * 0.1; // 10% –±–∞–∑–æ–≤—ã–π —Ä–æ—Å—Ç
    const viralMultiplier = viralScore / 100;

    return {
      subscribers: Math.round(baseGrowth * (1 + viralMultiplier)),
      engagement: Math.round(channelData.engagement * (1 + viralMultiplier * 0.5)),
      reach: Math.round(channelData.subscribers * 2 * (1 + viralMultiplier)),
    };
  }

  private generateRecommendations(channelData: TelegramChannelData, viralScore: number): string[] {
    const recommendations = [
      '–ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å 3-5 –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –≤ –∫–∞–∂–¥–æ–º –ø–æ—Å—Ç–µ',
      '–î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (–æ–ø—Ä–æ—Å—ã, –∫–Ω–æ–ø–∫–∏)',
      '–°–æ–∑–¥–∞—Ç—å —Å–µ—Ä–∏—é –æ–±—É—á–∞—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤ –¥–ª—è —É–¥–µ—Ä–∂–∞–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏',
    ];

    if (viralScore < 60) {
      recommendations.push('–£–ª—É—á—à–∏—Ç—å –≤–∏—Ä—É—Å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é');
    }

    if (channelData.subscribers < 500) {
      recommendations.push('–ó–∞–ø—É—Å—Ç–∏—Ç—å cross-promotion —Å –¥—Ä—É–≥–∏–º–∏ —Ç—Ä–µ–π–¥–∏–Ω–≥ –∫–∞–Ω–∞–ª–∞–º–∏');
    }

    if (channelData.engagement < 10) {
      recommendations.push('–£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º');
    }

    return recommendations;
  }

  // === –≠–ö–°–ü–û–†–¢ –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ===
  
  async exportResults(testResults: PromotionTestResult): Promise<string> {
    const report = `
üéØ –û–¢–ß–ï–¢ –û –¢–ï–°–¢–û–í–û–ô –ö–ê–ú–ü–ê–ù–ò–ò TELEGRAM

üìä –û–°–ù–û–í–ù–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:
‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${testResults.contentGenerated.length} –ø–æ—Å—Ç–æ–≤
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π –≤–∏—Ä—É—Å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: ${testResults.viralScore.toFixed(1)}/100
‚Ä¢ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: +${testResults.expectedGrowth.subscribers}
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏: +${testResults.expectedGrowth.engagement}%
‚Ä¢ –û–∂–∏–¥–∞–µ–º—ã–π –æ—Ö–≤–∞—Ç: ${testResults.expectedGrowth.reach.toLocaleString()}

üöÄ –°–û–ó–î–ê–ù–ù–´–ô –ö–û–ù–¢–ï–ù–¢:
${testResults.contentGenerated.map((content, i) => `${i + 1}. ${content.substring(0, 100)}...`).join('\n')}

üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
${testResults.recommendations.map(rec => `‚Ä¢ ${rec}`).join('\n')}

‚ö° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:
1. –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 2-3 —á–∞—Å–∞
2. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –ø–µ—Ä–≤—ã–µ 24 —á–∞—Å–∞
3. –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
4. –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞

–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date().toLocaleString('ru-RU')}
    `;

    return report.trim();
  }
}

export const telegramTestPromotion = new TelegramTestPromotion();
