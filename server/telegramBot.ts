import TelegramBot from 'node-telegram-bot-api';
import cron from 'node-cron';
import OpenAI from 'openai';

const TELEGRAM_TOKEN = process.env.BOTTG || '';
const CHANNEL_ID = '@IIPRB';

const grok = new OpenAI({
  apiKey: process.env.XAI_API_KEY || '',
  baseURL: 'https://api.x.ai/v1'
});

let bot: TelegramBot | null = null;
let isSchedulerPaused = false;

// –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
const referralStats = new Map<string, { invites: number; rewards: number }>();
const userReferrals = new Map<string, string[]>();

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
const welcomeMessages = [
  'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ AI-—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤!',
  'üéâ –ü—Ä–∏–≤–µ—Ç! –¢—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–∞–º–æ–º—É –∞–∫—Ç–∏–≤–Ω–æ–º—É AI-–∫–∞–Ω–∞–ª—É! –ü–æ–≥–Ω–∞–ª–∏ —É—á–∏—Ç—å—Å—è!',
  'üöÄ Welcome! –ó–¥–µ—Å—å —Ç—ã —É–∑–Ω–∞–µ—à—å –≤—Å—ë –ø—Ä–æ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –∏ AI. –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã!',
  'üí° –ü—Ä–∏–≤–µ—Ç! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—É–±–ª–∏–∫—É–µ–º –ø–æ–ª–µ–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–æ AI. –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏!',
  'üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –¢—É—Ç –≤—Å—è –º–∞–≥–∏—è –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π. –ü–æ–≥—Ä—É–∂–∞–µ–º—Å—è –≤–º–µ—Å—Ç–µ!'
];

const contentTopics = [
  '–ö–∞–∫ ChatGPT —ç–∫–æ–Ω–æ–º–∏—Ç 5 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º',
  '–¢–û–ü-5 AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ 2025',
  '–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã',
  'AI –≤ –∫–æ—É—á–∏–Ω–≥–µ: –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
  '–ë—É–¥—É—â–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: —Ä–æ–ª—å AI –≤ –æ–±—É—á–µ–Ω–∏–∏',
  '–ü—Ä–∞–∫—Ç–∏–∫–∞: —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω —Å AI –∑–∞ 10 –º–∏–Ω—É—Ç',
  '–ö–∞–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å —Å–µ–±—è –ª—É—á—à–µ',
  '–¢–û–ü-3 –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å ChatGPT',
  'AI –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç',
  '–ù–µ–π—Ä–æ—Ö–∞–∫–∏–Ω–≥: –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å –º—ã—à–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AI'
];

async function generatePost(topic: string): Promise<string> {
  try {
    const prompt = `–°–æ–∑–¥–∞–π –ø–æ—Å—Ç –¥–ª—è Telegram –ø—Ä–æ "${topic}". 300-500 —Å–∏–º–≤–æ–ª–æ–≤. –ù–∞—á–Ω–∏ —Å —ç–º–æ–¥–∑–∏, –¥–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å, –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é. –ê—É–¥–∏—Ç–æ—Ä–∏—è: –ø—Å–∏—Ö–æ–ª–æ–≥–∏, –∫–æ—É—á–∏, IT. –î–æ–±–∞–≤—å 3-5 —Ö–µ—à—Ç–µ–≥–æ–≤.`;

    const response = await grok.chat.completions.create({
      model: 'grok-2-latest',
      messages: [{ role: 'user', content: prompt }],
      temperature: 0.8,
      max_tokens: 500
    });

    return response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞';
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', error);
    return `ü§ñ AI –ò –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨\n\n–ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä—É—Ç–∏–Ω—ã!\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∏–Ω—Å–∞–π—Ç–æ–≤ üëâ ${CHANNEL_ID}\n\n#AI #–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å #–Ω–µ–π—Ä–æ—Å–µ—Ç–∏`;
  }
}

export async function publishPost() {
  if (!bot || isSchedulerPaused) {
    console.log('‚è∏Ô∏è –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–±–æ—Ç –Ω–∞ –ø–∞—É–∑–µ)');
    return;
  }
  
  try {
    const randomTopic = contentTopics[Math.floor(Math.random() * contentTopics.length)];
    const postText = await generatePost(randomTopic);
    
    await bot.sendMessage(CHANNEL_ID, postText);
    console.log(`‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
    console.log(`üìù –¢–µ–º–∞: ${randomTopic}`);
    return { success: true, topic: randomTopic, text: postText };
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error);
    throw error;
  }
}

async function publishPoll() {
  if (!bot || isSchedulerPaused) return;
  
  try {
    const question = '–ö–∞–∫–æ–π AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —á–∞—â–µ –≤—Å–µ–≥–æ?';
    const options = ['ChatGPT', 'Claude', 'Midjourney', '–î—Ä—É–≥–æ–π'];
    
    await bot.sendPoll(CHANNEL_ID, question, options, {
      is_anonymous: true,
      allows_multiple_answers: false
    });
    
    console.log(`‚úÖ –û–ø—Ä–æ—Å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–ø—Ä–æ—Å–∞:', error);
  }
}

export function startTelegramBot() {
  if (!TELEGRAM_TOKEN) {
    console.log('‚ö†Ô∏è BOTTG —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω - Telegram –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω');
    return;
  }

  bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });
  
  console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}`);
  console.log('');
  
  // –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
  cron.schedule('0 9 * * *', () => {
    console.log('‚è∞ –£—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç (9:00)');
    publishPost();
  });
  
  cron.schedule('0 15 * * *', () => {
    console.log('‚è∞ –î–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç (15:00)');
    publishPost();
  });
  
  cron.schedule('0 20 * * *', () => {
    console.log('‚è∞ –í–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç (20:00)');
    publishPost();
  });
  
  cron.schedule('0 12 * * 1,4', () => {
    console.log('‚è∞ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–ø—Ä–æ—Å–∞');
    publishPoll();
  });
  
  // ====================================
  // –ë–ê–ó–û–í–´–ï –ö–û–ú–ê–ù–î–´
  // ====================================

  bot.onText(/\/start(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = msg.from?.id.toString() || '';
    const referrerId = match && match[1] ? match[1] : null;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    if (referrerId && referrerId !== userId) {
      if (!referralStats.has(referrerId)) {
        referralStats.set(referrerId, { invites: 0, rewards: 0 });
      }
      if (!userReferrals.has(referrerId)) {
        userReferrals.set(referrerId, []);
      }
      
      const referrerData = referralStats.get(referrerId)!;
      const invitedUsers = userReferrals.get(referrerId)!;
      
      if (!invitedUsers.includes(userId)) {
        invitedUsers.push(userId);
        referrerData.invites++;
        
        if (referrerData.invites % 5 === 0) {
          referrerData.rewards++;
          await bot!.sendMessage(referrerId, `üéÅ –ù–ê–ì–†–ê–î–ê! –¢—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª ${referrerData.invites} –¥—Ä—É–∑–µ–π!\n\nüèÜ –ü–æ–ª—É—á–µ–Ω–∞ –Ω–∞–≥—Ä–∞–¥–∞ #${referrerData.rewards}\n\nüí° –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π!`);
        } else {
          await bot!.sendMessage(referrerId, `‚úÖ –ü–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫!\n\n–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: ${referrerData.invites}\nüéÅ –î–æ –Ω–∞–≥—Ä–∞–¥—ã: ${5 - (referrerData.invites % 5)} –¥—Ä—É–∑–µ–π`);
        }
        
        const randomWelcome = welcomeMessages[Math.floor(Math.random() * welcomeMessages.length)];
        await bot!.sendMessage(chatId, `${randomWelcome}\n\nüíù –¢–µ–±—è –ø—Ä–∏–≥–ª–∞—Å–∏–ª –¥—Ä—É–≥, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!`);
      }
    }
    
    const welcomeMessage = `üëã <b>–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ Telegram</b>

ü§ñ –ü–æ–º–æ–≥—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª, —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏—é!

üí¨ <b>–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:</b>`;
    
    await bot!.sendMessage(chatId, welcomeMessage, {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚úçÔ∏è –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç', callback_data: 'menu_content' },
            { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'menu_analytics' }
          ],
          [
            { text: 'üöÄ AI-–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ', callback_data: 'menu_promo' },
            { text: 'üéÅ –í–∏—Ä—É—Å–Ω—ã–π —Ä–æ—Å—Ç', callback_data: 'menu_viral' }
          ],
          [
            { text: 'üîç –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã', callback_data: 'menu_spy' },
            { text: 'üí° –°–æ–≤–µ—Ç—ã', callback_data: 'menu_advice' }
          ],
          [
            { text: 'üìã –í—Å–µ –∫–æ–º–∞–Ω–¥—ã', callback_data: 'show_help' }
          ]
        ]
      }
    });
  });
  
  bot.onText(/\/menu/, async (msg) => {
    const chatId = msg.chat.id;
    const menuMessage = `üéØ <b>–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ</b>

üí¨ –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å!`;
    
    await bot!.sendMessage(chatId, menuMessage, {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚úçÔ∏è –ö–æ–Ω—Ç–µ–Ω—Ç', callback_data: 'menu_content' },
            { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'menu_analytics' }
          ],
          [
            { text: 'üöÄ –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ', callback_data: 'menu_promo' },
            { text: 'üéÅ –í–∏—Ä—É—Å–Ω—ã–π —Ä–æ—Å—Ç', callback_data: 'menu_viral' }
          ],
          [
            { text: 'üîç –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã', callback_data: 'menu_spy' },
            { text: 'üí° –°–æ–≤–µ—Ç—ã', callback_data: 'menu_advice' }
          ],
          [
            { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'menu_settings' }
          ],
          [
            { text: 'üìã –í—Å–µ –∫–æ–º–∞–Ω–¥—ã', callback_data: 'show_help' }
          ]
        ]
      }
    });
  });

  bot.onText(/\/help/, async (msg) => {
    const chatId = msg.chat.id;
    const helpMessage = `
üìö –ú–ï–ù–Æ –ö–û–ú–ê–ù–î

‚úçÔ∏è –°–û–ó–î–ê–¢–¨ –ö–û–ù–¢–ï–ù–¢:
/ideas - –∏–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤
/viral - –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç
/hashtags - –ø–æ–¥–±–æ—Ä —Ö–µ—à—Ç–µ–≥–æ–≤
/hook - —Ü–µ–ø–ª—è—é—â–∏–µ —Ö—É–∫–∏

üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê:
/analytics - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞
/growth - –ø—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞
/viralcheck - –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏

üîç –ê–ù–ê–õ–ò–ó –†–´–ù–ö–ê:
/spy [–Ω–∞–∑–≤–∞–Ω–∏–µ] - —à–ø–∏–æ–Ω–∞–∂ –∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏
/niche [—Ç–µ–º–∞] - –∞–Ω–∞–ª–∏–∑ –Ω–∏—à–∏
/trends - –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã

üéØ –°–¢–†–ê–¢–ï–ì–ò–Ø:
/blueprint - –ø–ª–∞–Ω –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
/boost - –ø–ª–∞–Ω —Ä–æ—Å—Ç–∞ –Ω–∞ 30 –¥–Ω–µ–π
/engage - —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è

üöÄ –í–ò–†–£–°–ù–´–ï –ú–ï–•–ê–ù–ò–ö–ò:
/contest - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω–∫—É—Ä—Å–∞
/quiz - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞
/magnet - –ª–∏–¥-–º–∞–≥–Ω–∏—Ç
/story - –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Stories
/challenge - –≤–∏—Ä—É—Å–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂

üõ† –£–ü–†–ê–í–õ–ï–ù–ò–ï:
/schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
/pause - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
/resume - –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏

üí¨ AI-–ê–°–°–ò–°–¢–ï–ù–¢:
–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å—ã - —è –æ—Ç–≤–µ—á—É!
–ù–µ –Ω—É–∂–Ω—ã –∫–æ–º–∞–Ω–¥—ã —Å–æ "/"

–ü—Ä–∏–º–µ—Ä: "–ö–∞–∫ –Ω–∞–±—Ä–∞—Ç—å 1000 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤?"

üéØ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: /menu
üì¢ ${CHANNEL_ID}
    `;
    await bot!.sendMessage(chatId, helpMessage);
  });
  
  // ====================================
  // –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–û–ù–¢–ï–ù–¢–ê
  // ====================================
  
  bot.onText(/\/ideas(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const niche = match && match[1] ? match[1] : 'AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏';
    
    await bot!.sendMessage(chatId, 'üí° –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–¥–µ–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    
    try {
      const prompt = `5 –∏–¥–µ–π –¥–ª—è –ø–æ—Å—Ç–æ–≤ –≤ Telegram –ø—Ä–æ "${niche}". –ö–∞–∂–¥–∞—è: –∑–∞–≥–æ–ª–æ–≤–æ–∫ + 1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 600
      });

      const ideas = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏';
      await bot!.sendMessage(chatId, `üí° –ò–î–ï–ò –î–õ–Ø –ö–û–ù–¢–ï–ù–¢–ê\n\n–ù–∏—à–∞: ${niche}\n\n${ideas}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–¥–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });

  bot.onText(/\/viral(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match && match[1] ? match[1] : 'AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã';
    
    await bot!.sendMessage(chatId, 'üöÄ –°–æ–∑–¥–∞—é –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç...');
    
    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–´–ô –ø–æ—Å—Ç –¥–ª—è Telegram –ø—Ä–æ "${topic}": —Å–∏–ª—å–Ω—ã–π —Ö—É–∫, —ç–º–æ—Ü–∏–∏, —Ü–µ–Ω–Ω–æ—Å—Ç—å, 350-600 —Å–∏–º–≤–æ–ª–æ–≤, —ç–º–æ–¥–∑–∏.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 600
      });

      const viralPost = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏';
      await bot!.sendMessage(chatId, `üöÄ –í–ò–†–£–°–ù–´–ô –ü–û–°–¢:\n\n${viralPost}\n\n‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });

  bot.onText(/\/hashtags(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match && match[1] ? match[1] : contentTopics[0];
    
    await bot!.sendMessage(chatId, '#Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ö–µ—à—Ç–µ–≥–∏...');
    
    try {
      const prompt = `10 —Ö–µ—à—Ç–µ–≥–æ–≤ –¥–ª—è –ø–æ—Å—Ç–∞ "${topic}": 5 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö, 5 –Ω–∏—à–µ–≤—ã—Ö. –§–æ—Ä–º–∞—Ç: #—Ö–µ—à—Ç–µ–≥ - –æ–ø–∏—Å–∞–Ω–∏–µ`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 400
      });

      const hashtags = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏';
      await bot!.sendMessage(chatId, `#Ô∏è‚É£ –•–ï–®–¢–ï–ì–ò:\n\n${hashtags}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö–µ—à—Ç–µ–≥–æ–≤.');
    }
  });

  // ====================================
  // –ê–ù–ê–õ–ò–¢–ò–ö–ê
  // ====================================
  
  bot.onText(/\/analytics/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìä –ü–æ–ª—É—á–∞—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É...');
    
    const analytics = `üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê –ö–ê–ù–ê–õ–ê

üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}

üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞:
‚Ä¢ –ü–æ—Å—Ç–æ–≤: 3/–¥–µ–Ω—å
‚Ä¢ –û–ø—Ä–æ—Å–æ–≤: 2/–Ω–µ–¥–µ–ª—é
‚Ä¢ AI –º–æ–¥–µ–ª—å: Grok 2
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å—Ç–∞: ~$0.0001

‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
‚Ä¢ 09:00 - —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 15:00 - –¥–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç
‚Ä¢ 20:00 - –≤–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 12:00 (–ü–Ω/–ß—Ç) - –æ–ø—Ä–æ—Å—ã

üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±—é–¥–∂–µ—Ç–Ω–∞—è AI –º–æ–¥–µ–ª—å
‚úÖ –û–ø—Ä–æ—Å—ã –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç

–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: /report
–î–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ —Ä–æ—Å—Ç–∞: /growth`;
      
    await bot!.sendMessage(chatId, analytics);
  });

  bot.onText(/\/growth/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞...');
    
    try {
      const prompt = `–ü—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI: –¥–µ–Ω—å/–Ω–µ–¥–µ–ª—è/–º–µ—Å—è—Ü. –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–æ—Å—Ç–∞ –∏ –∫–∞–∫ —É—Å–∫–æ—Ä–∏—Ç—å. –î–æ 400 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 500
      });

      const growth = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üìà –ü–†–û–ì–ù–û–ó –†–û–°–¢–ê\n\n${growth}\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /crosspromo –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞.');
    }
  });

  // ====================================
  // –£–ü–†–ê–í–õ–ï–ù–ò–ï
  // ====================================
  
  bot.onText(/\/schedule/, async (msg) => {
    const chatId = msg.chat.id;
    
    const schedule = `üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ü–£–ë–õ–ò–ö–ê–¶–ò–ô

‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø–æ—Å—Ç—ã:
‚Ä¢ 09:00 - –£—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 15:00 - –î–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç
‚Ä¢ 20:00 - –í–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç

üìä –û–ø—Ä–æ—Å—ã:
‚Ä¢ 12:00 (–ü–Ω, –ß—Ç)

ü§ñ AI: Grok 2
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ~$0.0001/–ø–æ—Å—Ç

–°—Ç–∞—Ç—É—Å: ${isSchedulerPaused ? '‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ' : '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ'}

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
/pause - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
/resume - –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
/post - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å`;
    
    await bot!.sendMessage(chatId, schedule);
  });

  bot.onText(/\/pause/, async (msg) => {
    const chatId = msg.chat.id;
    isSchedulerPaused = true;
    
    await bot!.sendMessage(chatId, `‚è∏Ô∏è –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –û–°–¢–ê–ù–û–í–õ–ï–ù–´

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Å—Ç—ã –∏ –æ–ø—Ä–æ—Å—ã –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.

–ß—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å:
/resume - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞
/post - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –≤—Ä—É—á–Ω—É—é

–°—Ç–∞—Ç—É—Å: ‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ`);
  });

  bot.onText(/\/resume/, async (msg) => {
    const chatId = msg.chat.id;
    isSchedulerPaused = false;
    
    await bot!.sendMessage(chatId, `‚ñ∂Ô∏è –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –í–û–ó–û–ë–ù–û–í–õ–ï–ù–´

–ê–≤—Ç–æ–ø–∏–ª–æ—Ç —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω!

‚è∞ –°–ª–µ–¥—É—é—â–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:
‚Ä¢ 09:00 - —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 15:00 - –¥–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç
‚Ä¢ 20:00 - –≤–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç

–°—Ç–∞—Ç—É—Å: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω`);
  });

  bot.onText(/\/settings/, async (msg) => {
    const chatId = msg.chat.id;
    
    const settings = `‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê

üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:
‚Ä¢ AI –º–æ–¥–µ–ª—å: Grok 2
‚Ä¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}
‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: 3
‚Ä¢ –û–ø—Ä–æ—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é: 2
‚Ä¢ –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π

‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
‚Ä¢ 09:00, 15:00, 20:00

üí∞ –≠–∫–æ–Ω–æ–º–∏–∫–∞:
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å—Ç–∞: $0.0001
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è vs GPT-4: 90%

üìà –°—Ç–∞—Ç—É—Å: ${isSchedulerPaused ? '‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ' : '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'}`;
    
    await bot!.sendMessage(chatId, settings);
  });

  // ====================================
  // –†–ï–ñ–ò–ú –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Ø
  // ====================================

  bot.onText(/\/niche(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const niche = match && match[1] ? match[1] : 'AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏';
    
    await bot!.sendMessage(chatId, 'üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–∏—à—É... ‚è≥ 10-15 —Å–µ–∫');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–ê–Ω–∞–ª–∏–∑ –Ω–∏—à–∏ "${niche}" –≤ Telegram 2025:
1. –†–∞–∑–º–µ—Ä —Ä—ã–Ω–∫–∞ –∏ —Ä–æ—Å—Ç
2. –¢–û–ü-3 –∏–≥—Ä–æ–∫–∞ (–∞—É–¥–∏—Ç–æ—Ä–∏—è, –£–¢–ü, —Å–ª–∞–±–æ—Å—Ç–∏)
3. –¢—Ä–µ–Ω–¥—ã –∏ –ø—Ä–æ–±–µ–ª—ã
4. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –≤—Ö–æ–¥–∞
5. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 1200
      });

      const analysis = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞';
      await bot!.sendMessage(chatId, `üìä –ê–ù–ê–õ–ò–ó –ù–ò–®–ò: ${niche}\n\n${analysis}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∏—à–∏.');
    }
  });

  bot.onText(/\/spy(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const competitor = match && match[1] ? match[1] : '—Ç–æ–ø–æ–≤—ã–µ AI –∫–∞–Ω–∞–ª—ã';
    
    await bot!.sendMessage(chatId, 'üïµÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è —Ä–∞–∑–≤–µ–¥–∫–∞ "${competitor}":
1. –ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è (—Ç–µ–º—ã, —Ñ–æ—Ä–º–∞—Ç—ã, —á–∞—Å—Ç–æ—Ç–∞)
2. –í–æ–≤–ª–µ—á–µ–Ω–∏–µ (—Ç—Ä–∏–≥–≥–µ—Ä—ã)
3. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è
4. –°–ª–∞–±—ã–µ –º–µ—Å—Ç–∞
5. –ß—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å (—Ç–æ–ø-3)
6. –ö–∞–∫ –æ–±–æ–π—Ç–∏ (–£–¢–ü)

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 1200
      });

      const spyReport = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üïµÔ∏è –ö–û–ù–ö–£–†–ï–ù–¢–ù–ê–Ø –†–ê–ó–í–ï–î–ö–ê\n\n${spyReport}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —à–ø–∏–æ–Ω–∞–∂–∞.');
    }
  });

  bot.onText(/\/trends/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç—Ä–µ–Ω–¥—ã 2025...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–ì–ª–∞–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã Telegram –æ–∫—Ç—è–±—Ä—å 2025:
1. –ö–æ–Ω—Ç–µ–Ω—Ç-—Ç—Ä–µ–Ω–¥—ã (—Ç–æ–ø-5 —Ñ–æ—Ä–º–∞—Ç–æ–≤)
2. Telegram-—Ñ–∏—á–∏ 2025 (Stories, Mini Apps, Stars)
3. –ü–æ–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
4. –§–æ—Ä–º–∞—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–∑—Ä—ã–≤–∞—é—Ç
5. 3 –∏–¥–µ–∏ –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –°–ï–ì–û–î–ù–Ø

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 1200
      });

      const trends = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üìà –¢–†–ï–ù–î–´ 2025\n\n${trends}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–Ω–¥–æ–≤.');
    }
  });

  bot.onText(/\/viralcheck\s+(.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const content = match && match[1] ? match[1] : '';
    
    if (!content) {
      await bot!.sendMessage(chatId, '‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç!\n\n–ü—Ä–∏–º–µ—Ä: /viralcheck –≤–∞—à —Ç–µ–∫—Å—Ç');
      return;
    }
    
    await bot!.sendMessage(chatId, 'üî• –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∏—Ä—É—Å–Ω–æ—Å—Ç—å...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–ê–Ω–∞–ª–∏–∑ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: "${content}"

–û—Ü–µ–Ω–∏ (0-10):
1. –•—É–∫ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
2. –≠–º–æ—Ü–∏–∏
3. –¶–µ–Ω–Ω–æ—Å—Ç—å
4. –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ
5. –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
6. –í–∏–∑—É–∞–ª—å–Ω–æ—Å—Ç—å

–ò–¢–û–ì–û: /60

–ß–¢–û –£–õ–£–ß–®–ò–¢–¨ (—Ç–æ–ø-3)
–î–û–†–ê–ë–û–¢–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

–î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 1000
      });

      const viralAnalysis = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üî• –ê–ù–ê–õ–ò–ó –í–ò–†–£–°–ù–û–°–¢–ò\n\n${viralAnalysis}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞.');
    }
  });

  bot.onText(/\/blueprint/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üéØ –°–æ–∑–¥–∞—é –ü–õ–ê–ù –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Ø... ‚è≥ 15-20 —Å–µ–∫');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–ü–ª–∞–Ω –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤:

1. –ú–ï–°–Ø–¶ 1-2: –§–£–ù–î–ê–ú–ï–ù–¢ (–∫–æ–Ω—Ç–µ–Ω—Ç, –ø–µ—Ä–≤–∞—è 1000)
2. –ú–ï–°–Ø–¶ 3-4: –†–û–°–¢ (–≤–∏—Ä—É—Å—ã, –∫—Ä–æ—Å—Å-–ø—Ä–æ–º–æ, —Ä–µ–∫–ª–∞–º–∞)
3. –ú–ï–°–Ø–¶ 5-6: –õ–ò–î–ï–†–°–¢–í–û (–ø—Ä–æ–¥—É–∫—Ç—ã, –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞)
4. –ö–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ç—Ä–∏—Ü–∞ 70/20/10
5. –î–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è
6. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è (—ç—Ç–∞–ø—ã)
7. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
8. –ú–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—Ö–∞ (KPI)

–î–æ 1500 —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 1800
      });

      const blueprint = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üéØ –ü–õ–ê–ù –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Ø\n\n${blueprint}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞.');
    }
  });

  // ====================================
  // AI-–ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –ü–†–û–î–í–ò–ñ–ï–ù–ò–Ø
  // ====================================

  bot.onText(/\/contest/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üéÅ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ö–û–ù–ö–£–†–° –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–´–ô –ö–û–ù–ö–£–†–° –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:

1. –ú–ï–•–ê–ù–ò–ö–ê (–ø—Ä–æ—Å—Ç–∞—è –∏ –ø–æ–Ω—è—Ç–Ω–∞—è):
   - –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É
   - –£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è
   - –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è

2. –ü–†–ò–ó–´ (—Ü–µ–Ω–Ω—ã–µ –¥–ª—è –¶–ê):
   - –ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑
   - 2-3 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–∞
   - –¶–µ–Ω–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ

3. –¢–ï–ö–°–¢ –ü–û–°–¢–ê (300-400 —Å–∏–º–≤–æ–ª–æ–≤):
   - –¶–µ–ø–ª—è—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
   - –ü—Ä–∏–∑—ã
   - –£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è
   - –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
   - –î–µ–¥–ª–∞–π–Ω

4. –¢–†–ò–ì–ì–ï–†–´ –í–û–í–õ–ï–ß–ï–ù–ò–Ø:
   - –ü–æ—á–µ–º—É –∑–∞—Ö–æ—á–µ—Ç—Å—è —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
   - –ö–∞–∫ —É–≤–µ–ª–∏—á–∏—Ç—å –æ—Ö–≤–∞—Ç

–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ—Å—Ç –≥–æ—Ç–æ–≤—ã–π –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –î–æ 600 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 800
      });

      const contest = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      
      await bot!.sendMessage(chatId, `üéÅ –í–ò–†–£–°–ù–´–ô –ö–û–ù–ö–£–†–°\n\n${contest}`, {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–∞–ª–µ', callback_data: 'publish_contest' },
              { text: 'üîÑ –î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç', callback_data: 'regenerate_contest' }
            ]
          ]
        }
      });
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω–∫—É—Ä—Å–∞.');
    }
  });

  bot.onText(/\/quiz/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üéØ –°–æ–∑–¥–∞—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –í–ò–ö–¢–û–†–ò–ù–£...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–£–Æ –í–ò–ö–¢–û–†–ò–ù–£ –¥–ª—è Telegram –ø—Ä–æ AI:

1. –¢–ï–ú–ê: —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ
2. –§–û–†–ú–ê–¢: 5 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
3. –ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å:
   - –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å
   - 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
   - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
   - –ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ

–°–¥–µ–ª–∞–π —Ç–∞–∫ —á—Ç–æ–±—ã –ª—é–¥–∏ –¥–µ–ª–∏–ª–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏!
–î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 1000
      });

      const quiz = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üéØ –í–ò–ö–¢–û–†–ò–ù–ê\n\n${quiz}\n\nüí° –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –∫–∞–∫ —Å–µ—Ä–∏—é –æ–ø—Ä–æ—Å–æ–≤!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã.');
    }
  });

  bot.onText(/\/hook/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'ü™ù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –¶–ï–ü–õ–Ø–Æ–©–ò–ï –•–£–ö–ò...');
    
    try {
      const prompt = `–°–æ–∑–¥–∞–π 10 –ú–û–©–ù–´–• —Ö—É–∫–æ–≤ (–ø–µ—Ä–≤—ã—Ö —Å—Ç—Ä–æ–∫) –¥–ª—è –ø–æ—Å—Ç–æ–≤ –ø—Ä–æ AI:

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –í—ã–∑—ã–≤–∞—é—Ç —à–æ–∫/—É–¥–∏–≤–ª–µ–Ω–∏–µ
- –°–æ–∑–¥–∞—é—Ç –∏–Ω—Ç—Ä–∏–≥—É
- –û–±–µ—â–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–ª—å–∑—É
- –ó–∞—Å—Ç–∞–≤–ª—è—é—Ç —á–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ

–ü—Ä–∏–º–µ—Ä—ã:
"üö® ChatGPT —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å—ç–∫–æ–Ω–æ–º–∏–ª –º–Ω–µ $5000..."
"‚ùå 97% –ª—é–¥–µ–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç AI –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –í–æ—Ç –∫–∞–∫ –Ω–∞–¥–æ..."
"üí∞ –≠—Ç–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–Ω–µ $500/–¥–µ–Ω—å..."

–§–æ—Ä–º–∞—Ç: —ç–º–æ–¥–∑–∏ + —Ü–µ–ø–ª—è—é—â–∞—è —Ñ—Ä–∞–∑–∞ (1 —Å—Ç—Ä–æ–∫–∞)
–î–æ 500 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 600
      });

      const hooks = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `ü™ù –¶–ï–ü–õ–Ø–Æ–©–ò–ï –•–£–ö–ò\n\n${hooks}\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –Ω–∞—á–∞–ª–µ –ø–æ—Å—Ç–æ–≤!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö—É–∫–æ–≤.');
    }
  });

  bot.onText(/\/magnet/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üß≤ –°–æ–∑–¥–∞—é –õ–ò–î-–ú–ê–ì–ù–ò–¢...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–°–æ–∑–¥–∞–π –ú–û–©–ù–´–ô –ª–∏–¥-–º–∞–≥–Ω–∏—Ç –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ AI –∫–∞–Ω–∞–ª:

1. –ß–¢–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–æ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–æ):
   - PDF –≥–∞–π–¥ / —á–µ–∫-–ª–∏—Å—Ç / —à–∞–±–ª–æ–Ω—ã
   - –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ (–∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞)
   - –¶–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏

2. –¢–ï–ö–°–¢ –ü–û–°–¢–ê –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è (300-400 —Å–∏–º–≤–æ–ª–æ–≤):
   - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≤—ã–≥–æ–¥–æ–π
   - –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç —á–µ–ª–æ–≤–µ–∫
   - –ü—Ä–∏–∑—ã–≤ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è

3. –ö–ê–ö –î–û–°–¢–ê–í–ò–¢–¨:
   - –ß–µ—Ä–µ–∑ –±–æ—Ç–∞ / –∫–∞–Ω–∞–ª / –≥—Ä—É–ø–ø—É
   - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è

4. –¢–†–ò–ì–ì–ï–†–´:
   - –ü–æ—á–µ–º—É –∑–∞—Ö–æ—á–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å
   - FOMO (—É–ø—É—â–µ–Ω–Ω–∞—è –≤—ã–≥–æ–¥–∞)

–ì–æ—Ç–æ–≤—ã–π –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ª–∏–¥-–º–∞–≥–Ω–∏—Ç. –î–æ 700 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 900
      });

      const magnet = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üß≤ –õ–ò–î-–ú–ê–ì–ù–ò–¢\n\n${magnet}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏–¥-–º–∞–≥–Ω–∏—Ç–∞.');
    }
  });

  bot.onText(/\/boost/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üöÄ –°–æ–∑–¥–∞—é –î–ï–¢–ê–õ–¨–ù–´–ô –ø–ª–∞–Ω —Ä–æ—Å—Ç–∞...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–ü–æ–¥—Ä–æ–±–Ω—ã–π 30-–¥–Ω–µ–≤–Ω—ã–π –ø–ª–∞–Ω —Ä–æ—Å—Ç–∞ Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:

**–î–µ–Ω—å 1-7: –§–£–ù–î–ê–ú–ï–ù–¢**
- –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
- –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü
- –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å 2-3 –ø–æ—Å—Ç–∞ –≤ –¥–µ–Ω—å (—É—Ç—Ä–æ/–≤–µ—á–µ—Ä)
- –†–µ–∑—É–ª—å—Ç–∞—Ç: +50-100 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

**–î–µ–Ω—å 8-14: –ê–ö–¢–ò–í–ê–¶–ò–Ø**
- –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–≤—ã–π –æ–ø—Ä–æ—Å/–≤–∏–∫—Ç–æ—Ä–∏–Ω—É
- –ù–∞—á–∞—Ç—å –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ
- –î–æ–±–∞–≤–∏—Ç—å Stories 2-3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å
- –†–µ–∑—É–ª—å—Ç–∞—Ç: +100-150 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

**–î–µ–Ω—å 15-21: –£–°–ö–û–†–ï–ù–ò–ï**
- –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫—Ä–æ—Å—Å-–ø—Ä–æ–º–æ —Å 3-5 –∫–∞–Ω–∞–ª–∞–º–∏
- –ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–µ—Ä–≤—ã–π –∫–æ–Ω–∫—É—Ä—Å
- –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
- –†–µ–∑—É–ª—å—Ç–∞—Ç: +200-300 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

**–î–µ–Ω—å 22-24: –ü–û–î–î–ï–†–ñ–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û–°–¢–ò**
- –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ª–µ–≥–∫–æ —Ä–µ–ø–æ—Å—Ç–∏—Ç—å (—Ü–∏—Ç–∞—Ç—ã, –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã)
- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
- –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ–º –∞—É–¥–∏—Ç–æ—Ä–∏–∏

**–î–µ–Ω—å 25-27: –í–ò–†–£–°–ù–ê–Ø –í–û–õ–ù–ê**
- –ü—Ä–æ–≤–µ—Å—Ç–∏ –µ—â–µ –æ–¥–∏–Ω –∫–æ–Ω–∫—É—Ä—Å –∏–ª–∏ —Ä–æ–∑—ã–≥—Ä—ã—à –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–∞
- –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç —ç–º–æ—Ü–∏–∏ –∏ —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏—è
- –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤—ã

**–î–µ–Ω—å 28-30: –ó–ê–í–ï–†–®–ï–ù–ò–ï –ò –ê–ù–ê–õ–ò–ó**
- –ü–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏ –º–µ—Å—è—Ü–∞, –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞ –±—É–¥—É—â–µ–µ
- –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –∞—É–¥–∏—Ç–æ—Ä–∏–∏

–ò–¢–û–ì–û –ó–ê –ú–ï–°–Ø–¶: 750-1200 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

–î–æ 1400 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.75,
        max_tokens: 1600
      });

      const boost = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üöÄ –ü–õ–ê–ù –†–û–°–¢–ê –ù–ê 30 –î–ù–ï–ô\n\n${boost}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞ —Ä–æ—Å—Ç–∞.');
    }
  });

  bot.onText(/\/story/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üì± –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è STORIES...');
    
    try {
      const prompt = `–°–æ–∑–¥–∞–π 5 –∏–¥–µ–π –¥–ª—è Telegram Stories –ø—Ä–æ AI:

–ö–∞–∂–¥–∞—è –∏—Å—Ç–æ—Ä–∏—è:
1. –¢–ï–ú–ê (—Ü–µ–ø–ª—è—é—â–∞—è)
2. –¢–ï–ö–°–¢ (–∫–æ—Ä–æ—Ç–∫–∏–π, 50-100 —Å–∏–º–≤–æ–ª–æ–≤)
3. –í–ò–ó–£–ê–õ (—á—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å/–Ω–∞–ø–∏—Å–∞—Ç—å)
4. –ü–†–ò–ó–´–í –ö –î–ï–ô–°–¢–í–ò–Æ (—Å–≤–∞–π–ø –≤–≤–µ—Ä—Ö / —Ä–µ–∞–∫—Ü–∏—è)

–§–æ—Ä–º–∞—Ç—ã:
- –§–∞–∫—Ç + —ç–º–æ–¥–∑–∏
- –í–æ–ø—Ä–æ—Å –∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
- –ë—ã—Å—Ç—Ä—ã–π —Å–æ–≤–µ—Ç
- –ó–∞ –∫—É–ª–∏—Å–∞–º–∏
- –û–ø—Ä–æ—Å / Quiz

–î–æ 600 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 700
      });

      const stories = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üì± –ö–û–ù–¢–ï–ù–¢ –î–õ–Ø STORIES\n\n${stories}\n\nüí° –ü—É–±–ª–∏–∫—É–π—Ç–µ 2-3 Stories –≤ –¥–µ–Ω—å!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Stories.');
    }
  });

  bot.onText(/\/engage/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üí¨ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –í–û–í–õ–ï–ß–ï–ù–ò–ï...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ì–û –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –≤ Telegram:

1. –§–û–†–ú–ê–¢–´ –ö–û–ù–¢–ï–ù–¢–ê (—Ç–æ–ø-5):
   - –ö–∞–∫–∏–µ –ø–æ—Å—Ç—ã –ø–æ–ª—É—á–∞—é—Ç –±–æ–ª—å—à–µ —Ä–µ–∞–∫—Ü–∏–π
   - –ü—Ä–∏–º–µ—Ä—ã

2. –¢–†–ò–ì–ì–ï–†–´ –í–û–í–õ–ï–ß–ï–ù–ò–Ø:
   - –í–æ–ø—Ä–æ—Å—ã –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç
   - –ü—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é
   - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤

3. –í–†–ï–ú–Ø –ü–£–ë–õ–ò–ö–ê–¶–ò–ô:
   - –ö–æ–≥–¥–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–∞
   - –õ—É—á—à–∏–µ –¥–Ω–∏

4. –ß–ê–°–¢–û–¢–ê:
   - –°–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ
   - –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã

5. –û–ü–†–û–°–´ –ò QUIZ:
   - –¢–µ–º—ã –¥–ª—è –æ–ø—Ä–æ—Å–æ–≤
   - –ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É

6. –ö–û–ù–ö–£–†–°–´:
   - –ö–∞–∫ —á–∞—Å—Ç–æ –¥–µ–ª–∞—Ç—å
   - –ö–∞–∫–∏–µ –ø—Ä–∏–∑—ã

7. –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò:
   - –ö–∞–∫ —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—Å—É–∂–¥–µ–Ω–∏—è
   - –ù–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.75,
        max_tokens: 1200
      });

      const engagement = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üí¨ –°–¢–†–ê–¢–ï–ì–ò–Ø –í–û–í–õ–ï–ß–ï–ù–ò–Ø\n\n${engagement}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è.');
    }
  });

  bot.onText(/\/challenge/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üèÜ –°–æ–∑–¥–∞—é –ß–ï–õ–õ–ï–ù–î–ñ...');
    await bot!.sendChatAction(chatId, 'typing');
    
    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–´–ô –ß–ï–õ–õ–ï–ù–î–ñ –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:

1. –ö–û–ù–¶–ï–ü–¶–ò–Ø:
   - –ù–∞–∑–≤–∞–Ω–∏–µ —á–µ–ª–ª–µ–Ω–¥–∂–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ)
   - –°—É—Ç—å (—á—Ç–æ –¥–µ–ª–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º)
   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (7-30 –¥–Ω–µ–π)

2. –ú–ï–•–ê–ù–ò–ö–ê:
   - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
   - –ö–∞–∫ –æ—Ç—á–∏—Ç—ã–≤–∞—Ç—å—Å—è
   - –ö–∞–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å

3. –ú–û–¢–ò–í–ê–¶–ò–Ø:
   - –ü–æ—á–µ–º—É —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
   - –ß—Ç–æ –ø–æ–ª—É—á–∞—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∏
   - –ü—Ä–∏–∑—ã / –Ω–∞–≥—Ä–∞–¥—ã

4. –¢–ï–ö–°–¢ –ê–ù–û–ù–°–ê (400-500 —Å–∏–º–≤–æ–ª–æ–≤):
   - –ó–∞–≥–æ–ª–æ–≤–æ–∫
   - –£—Å–ª–æ–≤–∏—è
   - –ü—Ä–∏–∑—ã–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è

5. –í–ò–†–£–°–ù–û–°–¢–¨:
   - –ö–∞–∫ —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ—Å—Ç—ã
   - –•–µ—à—Ç–µ–≥ —á–µ–ª–ª–µ–Ω–¥–∂–∞
   - –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è

–ì–æ—Ç–æ–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂. –î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 1000
      });

      const challenge = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üèÜ –í–ò–†–£–°–ù–´–ô –ß–ï–õ–õ–ï–ù–î–ñ\n\n${challenge}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–ª–ª–µ–Ω–¥–∂–∞.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
  bot.on('callback_query', async (callbackQuery) => {
    const msg = callbackQuery.message;
    const chatId = msg?.chat.id;
    const data = callbackQuery.data;
    
    if (!chatId) return;

    try {
      // –ú–µ–Ω—é: –ö–æ–Ω—Ç–µ–Ω—Ç
      if (data === 'menu_content') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, `‚úçÔ∏è <b>–°–û–ó–î–ê–ù–ò–ï –ö–û–ù–¢–ï–ù–¢–ê</b>

–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:`, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üí° –ò–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤', callback_data: 'cmd_ideas' },
                { text: 'üî• –í–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç', callback_data: 'cmd_viral' }
              ],
              [
                { text: 'ü™ù –¶–µ–ø–ª—è—é—â–∏–µ —Ö—É–∫–∏', callback_data: 'cmd_hook' },
                { text: '#Ô∏è‚É£ –•–µ—à—Ç–µ–≥–∏', callback_data: 'cmd_hashtags' }
              ],
              [
                { text: 'üìù –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç', callback_data: 'cmd_post' }
              ],
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ú–µ–Ω—é: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      else if (data === 'menu_analytics') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, `üìä <b>–ê–ù–ê–õ–ò–¢–ò–ö–ê –ò –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>

–í—ã–±–µ—Ä–∏ —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å:`, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞', callback_data: 'cmd_analytics' },
                { text: 'üöÄ –ü—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞', callback_data: 'cmd_growth' }
              ],
              [
                { text: 'üìã –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç', callback_data: 'cmd_report' }
              ],
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ú–µ–Ω—é: AI-–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ
      else if (data === 'menu_promo') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, `üöÄ <b>AI-–ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –ü–†–û–î–í–ò–ñ–ï–ù–ò–Ø</b>

–ú–æ—â–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–æ—Å—Ç–∞:`, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üéÅ –ö–æ–Ω–∫—É—Ä—Å', callback_data: 'cmd_contest' },
                { text: 'üéØ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞', callback_data: 'cmd_quiz' }
              ],
              [
                { text: 'üß≤ –õ–∏–¥-–º–∞–≥–Ω–∏—Ç', callback_data: 'cmd_magnet' },
                { text: 'üì± Stories', callback_data: 'cmd_story' }
              ],
              [
                { text: 'üöÄ –ü–ª–∞–Ω —Ä–æ—Å—Ç–∞ (30–¥)', callback_data: 'cmd_boost' },
                { text: 'üèÜ –ß–µ–ª–ª–µ–Ω–¥–∂', callback_data: 'cmd_challenge' }
              ],
              [
                { text: 'üí¨ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è', callback_data: 'cmd_engage' }
              ],
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ú–µ–Ω—é: –í–∏—Ä—É—Å–Ω—ã–π —Ä–æ—Å—Ç
      else if (data === 'menu_viral') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, `üéÅ <b>–í–ò–†–£–°–ù–´–ô –†–û–°–¢</b>

–ü—Ä–∏–≤–ª–µ–∫–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—ã!`, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üîó –ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞', callback_data: 'cmd_referral' }
              ],
              [
                { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π', callback_data: 'referral_stats' }
              ],
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ú–µ–Ω—é: –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã
      else if (data === 'menu_spy') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, `üîç <b>–ê–ù–ê–õ–ò–ó –ö–û–ù–ö–£–†–ï–ù–¢–û–í</b>

–£–∑–Ω–∞–π —á—Ç–æ –¥–µ–ª–∞—é—Ç –¥—Ä—É–≥–∏–µ:`, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üïµÔ∏è –®–ø–∏–æ–Ω–∞–∂', callback_data: 'cmd_spy' },
                { text: 'üìä –ê–Ω–∞–ª–∏–∑ –Ω–∏—à–∏', callback_data: 'cmd_niche' }
              ],
              [
                { text: 'üéØ –û–±–∑–æ—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤', callback_data: 'cmd_competitors' }
              ],
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ú–µ–Ω—é: –°–æ–≤–µ—Ç—ã
      else if (data === 'menu_advice') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, `üí° <b>–°–û–í–ï–¢–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò</b>

–ü–æ–ª—É—á–∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:`, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üìà –¢—Ä–µ–Ω–¥—ã 2025', callback_data: 'cmd_trends' },
                { text: '‚è∞ –ö–æ–≥–¥–∞ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data: 'cmd_optimize' }
              ],
              [
                { text: 'üë• –ü—Ä–æ—Ñ–∏–ª—å –∞—É–¥–∏—Ç–æ—Ä–∏–∏', callback_data: 'cmd_audience' },
                { text: 'üéØ –ü–ª–∞–Ω –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data: 'cmd_blueprint' }
              ],
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ú–µ–Ω—é: –ù–∞—Å—Ç—Ä–æ–π–∫–∏
      else if (data === 'menu_settings') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, `‚öôÔ∏è <b>–ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê</b>

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π:`, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: 'üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data: 'cmd_schedule' },
                { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'cmd_settings' }
              ],
              [
                { text: '‚è∏Ô∏è –ü–∞—É–∑–∞', callback_data: 'cmd_pause' },
                { text: '‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å', callback_data: 'cmd_resume' }
              ],
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ü–æ–∫–∞–∑–∞—Ç—å help
      else if (data === 'show_help') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        const helpMessage = `üìö <b>–í–°–ï –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê</b>

<b>‚úçÔ∏è –ö–û–ù–¢–ï–ù–¢:</b>
/ideas - –∏–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤
/viral - –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç
/hook - —Ü–µ–ø–ª—è—é—â–∏–µ —Ö—É–∫–∏
/hashtags - –ø–æ–¥–±–æ—Ä —Ö–µ—à—Ç–µ–≥–æ–≤
/post - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç

<b>üöÄ –ü–†–û–î–í–ò–ñ–ï–ù–ò–ï:</b>
/contest - –∫–æ–Ω–∫—É—Ä—Å
/quiz - –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞
/magnet - –ª–∏–¥-–º–∞–≥–Ω–∏—Ç
/boost - –ø–ª–∞–Ω —Ä–æ—Å—Ç–∞ (30–¥)
/story - –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Stories
/engage - –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ
/challenge - —á–µ–ª–ª–µ–Ω–¥–∂

<b>üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê:</b>
/analytics - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/growth - –ø—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞
/report - –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç

<b>üîç –ö–û–ù–ö–£–†–ï–ù–¢–´:</b>
/spy - —à–ø–∏–æ–Ω–∞–∂
/niche - –∞–Ω–∞–ª–∏–∑ –Ω–∏—à–∏
/competitors - –æ–±–∑–æ—Ä

<b>üí° –°–û–í–ï–¢–´:</b>
/trends - —Ç—Ä–µ–Ω–¥—ã 2025
/optimize - –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π
/audience - –ø—Ä–æ—Ñ–∏–ª—å –¶–ê
/blueprint - –ø–ª–∞–Ω –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

<b>üéÅ –í–ò–†–£–°–ù–´–ô –†–û–°–¢:</b>
/referral - —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞

<b>‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò:</b>
/schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
/pause - –ø–∞—É–∑–∞
/resume - –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å

üí¨ –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å!`;

        await bot!.sendMessage(chatId, helpMessage, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back_menu' }
              ]
            ]
          }
        });
      }
      
      // –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
      else if (data === 'back_menu') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        const menuMessage = `üéØ <b>–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ</b>

üí¨ –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å!`;
        
        await bot!.sendMessage(chatId, menuMessage, {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: '‚úçÔ∏è –ö–æ–Ω—Ç–µ–Ω—Ç', callback_data: 'menu_content' },
                { text: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'menu_analytics' }
              ],
              [
                { text: 'üöÄ –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ', callback_data: 'menu_promo' },
                { text: 'üéÅ –í–∏—Ä—É—Å–Ω—ã–π —Ä–æ—Å—Ç', callback_data: 'menu_viral' }
              ],
              [
                { text: 'üîç –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã', callback_data: 'menu_spy' },
                { text: 'üí° –°–æ–≤–µ—Ç—ã', callback_data: 'menu_advice' }
              ],
              [
                { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'menu_settings' }
              ]
            ]
          }
        });
      }
      
      // –ö–æ–º–∞–Ω–¥—ã (–∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏)
      else if (data?.startsWith('cmd_')) {
        await bot!.answerCallbackQuery(callbackQuery.id);
        const command = data.replace('cmd_', '');
        
        // –ù–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞–ø—Ä—è–º—É—é
        await bot!.sendMessage(chatId, `üí° –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /${command} –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!`);
      }
      
      // –°—Ç–∞—Ä—ã–µ callback (–∫–æ–Ω–∫—É—Ä—Å—ã –∏ —Ç.–¥.)
      else if (data === 'publish_contest') {
        await bot!.answerCallbackQuery(callbackQuery.id, {
          text: '‚úÖ –ö–æ–Ω–∫—É—Ä—Å –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!'
        });
        await bot!.sendMessage(chatId, 'üìù –ü—É–±–ª–∏–∫—É—é –∫–æ–Ω–∫—É—Ä—Å –≤ –∫–∞–Ω–∞–ª–µ...');
      } else if (data === 'regenerate_contest') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, 'üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç...');
      } else if (data === 'referral_stats') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        
        const userId = callbackQuery.from?.id.toString() || '';
        const stats = referralStats.get(userId) || { invites: 0, rewards: 0 };
        const invitedUsers = userReferrals.get(userId) || [];
        
        const statsMessage = `üìä <b>–î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>

üë• –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: ${stats.invites} ${stats.invites === 1 ? '–¥—Ä—É–≥' : '–¥—Ä—É–∑–µ–π'}
üèÜ –ü–æ–ª—É—á–µ–Ω–æ –Ω–∞–≥—Ä–∞–¥: ${stats.rewards}
üìà –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${invitedUsers.length}

üéØ –ü–†–û–ì–†–ï–°–° –î–û –ù–ê–ì–†–ê–î–´:
${stats.invites % 5}/5 –¥—Ä—É–∑–µ–π
${Array(stats.invites % 5).fill('üü¢').join('')}${Array(5 - (stats.invites % 5)).fill('‚ö™Ô∏è').join('')}

üíé –°–õ–ï–î–£–Æ–©–ê–Ø –ù–ê–ì–†–ê–î–ê:
${stats.invites < 5 ? 'üéÅ –ù–∞–≥—Ä–∞–¥–∞ #1 (5 –¥—Ä—É–∑–µ–π)' : 
  stats.invites < 10 ? 'üéÅ –ù–∞–≥—Ä–∞–¥–∞ #2 (10 –¥—Ä—É–∑–µ–π)' : 
  stats.invites < 15 ? 'üéÅ –ù–∞–≥—Ä–∞–¥–∞ #3 (15 –¥—Ä—É–∑–µ–π)' : 
  stats.invites < 20 ? 'üéÅ VIP —Å—Ç–∞—Ç—É—Å (20 –¥—Ä—É–∑–µ–π)' : 
  'üëë VIP —Å—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω!'}

üöÄ –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π!`;

        await bot!.sendMessage(chatId, statsMessage, { parse_mode: 'HTML' });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback:', error);
    }
  });

  // ====================================
  // AI –ê–°–°–ò–°–¢–ï–ù–¢ –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò
  // ====================================
  
  bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text || '';
    
    if (text.startsWith('/') || !text.trim()) {
      return;
    }
    
    console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${chatId}: ${text}`);
    
    try {
      await bot!.sendChatAction(chatId, 'typing');
      
      const prompt = `–¢—ã AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é Telegram. –ö–∞–Ω–∞–ª: ${CHANNEL_ID}. –í–æ–ø—Ä–æ—Å: "${text}". –î–∞–π –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, —ç–º–æ–¥–∑–∏. –ú–∞–∫—Å 500 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 600
      });

      const answer = response.choices[0].message.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help';
      
      await bot!.sendMessage(chatId, answer);
      console.log(`‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ${chatId}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:', error);
      await bot!.sendMessage(chatId, '‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help');
    }
  });
  
  console.log('üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 09:00, 15:00, 20:00 (–ø–æ—Å—Ç—ã), 12:00 –ü–Ω/–ß—Ç (–æ–ø—Ä–æ—Å—ã)');
  console.log('üí° –ö–æ–º–∞–Ω–¥—ã: /start /menu /help');
  console.log('üî• –†–µ–∂–∏–º –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: /niche /spy /trends /viralcheck /blueprint');
  console.log('ü§ñ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
}
