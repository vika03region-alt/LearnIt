import TelegramBot from 'node-telegram-bot-api';
import cron from 'node-cron';
import OpenAI from 'openai';

const TELEGRAM_TOKEN = process.env.BOTTG || '';
const CHANNEL_ID = '@IIPRB';

const grok = new OpenAI({
  apiKey: process.env.XAI_API_KEY || '',
  baseURL: 'https://api.x.ai/v1'
});

let bot: TelegramBot | null = null;

const contentTopics = [
  '–ö–∞–∫ ChatGPT —ç–∫–æ–Ω–æ–º–∏—Ç 5 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º',
  '–¢–û–ü-5 AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ 2025',
  '–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã',
  'AI –≤ –∫–æ—É—á–∏–Ω–≥–µ: –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
  '–ë—É–¥—É—â–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: —Ä–æ–ª—å AI –≤ –æ–±—É—á–µ–Ω–∏–∏',
  '–ü—Ä–∞–∫—Ç–∏–∫–∞: —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω —Å AI –∑–∞ 10 –º–∏–Ω—É—Ç',
  '–ö–∞–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å —Å–µ–±—è –ª—É—á—à–µ',
  '–¢–û–ü-3 –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å ChatGPT',
  'AI –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç',
  '–ù–µ–π—Ä–æ—Ö–∞–∫–∏–Ω–≥: –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å –º—ã—à–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AI'
];

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DB)
const userDatabase = new Map<number, {
  username?: string;
  firstName?: string;
  joinDate: Date;
  referrals: number;
  points: number;
  isActive: boolean;
}>();

// –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
const referralLinks = new Map<number, string>();
const referralRewards = new Map<number, number>();

async function generatePost(topic: string): Promise<string> {
  try {
    const prompt = `
–°–æ–∑–¥–∞–π —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.

–¢–µ–º–∞: ${topic}

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- 300-500 —Å–∏–º–≤–æ–ª–æ–≤
- –ù–∞—á–Ω–∏ —Å —ç–º–æ–¥–∑–∏ –∏ —Ü–µ–ø–ª—è—é—â–µ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
- –î–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å
- –î–æ–±–∞–≤—å –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å 3-5 —Ö–µ—à—Ç–µ–≥–æ–≤

–¢–æ–Ω: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π, –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π
–ê—É–¥–∏—Ç–æ—Ä–∏—è: –ø—Å–∏—Ö–æ–ª–æ–≥–∏, –∫–æ—É—á–∏, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏, IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã

–û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–º –ø–æ—Å—Ç–∞, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.
    `;

    const response = await grok.chat.completions.create({
      model: 'grok-2-latest',
      messages: [{ role: 'user', content: prompt }],
      temperature: 0.8,
      max_tokens: 600
    });

    return response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞';
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', error);
    return `ü§ñ AI –ò –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨\n\n–ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä—É—Ç–∏–Ω—ã!\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∏–Ω—Å–∞–π—Ç–æ–≤ üëâ ${CHANNEL_ID}\n\n#AI #–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å #–Ω–µ–π—Ä–æ—Å–µ—Ç–∏`;
  }
}

export async function publishPost() {
  if (!bot) {
    throw new Error('–ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }
  
  try {
    const randomTopic = contentTopics[Math.floor(Math.random() * contentTopics.length)];
    const postText = await generatePost(randomTopic);
    
    await bot.sendMessage(CHANNEL_ID, postText);
    console.log(`‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
    console.log(`üìù –¢–µ–º–∞: ${randomTopic}`);
    return { success: true, topic: randomTopic, text: postText };
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error);
    throw error;
  }
}

async function publishPoll() {
  if (!bot) return;
  
  try {
    const polls = [
      {
        question: 'üéØ –ö–∞–∫–æ–π AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —á–∞—â–µ –≤—Å–µ–≥–æ?',
        options: ['ChatGPT', 'Claude', 'Midjourney', 'Gemini'],
        prize: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥ –ø–æ AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º'
      },
      {
        question: 'üíº –í –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?',
        options: ['–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–ë–∏–∑–Ω–µ—Å', 'IT'],
        prize: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
      },
      {
        question: 'üöÄ –ö–∞–∫—É—é –∑–∞–¥–∞—á—É AI –ø–æ–º–æ–≥–∞–µ—Ç –≤–∞–º —Ä–µ—à–∏—Ç—å —á–∞—â–µ?',
        options: ['–ö–æ–Ω—Ç–µ–Ω—Ç', '–ê–Ω–∞–ª–∏–∑', '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è', '–û–±—É—á–µ–Ω–∏–µ'],
        prize: '–î–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º —à–∞–±–ª–æ–Ω–∞–º'
      }
    ];
    
    const poll = polls[Math.floor(Math.random() * polls.length)];
    
    await bot.sendPoll(CHANNEL_ID, poll.question, poll.options, {
      is_anonymous: false,
      allows_multiple_answers: false
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏–∑–µ
    await bot.sendMessage(CHANNEL_ID, 
      `üéÅ –£—á–∞—Å—Ç–≤—É–π –≤ –æ–ø—Ä–æ—Å–µ –∏ –ø–æ–ª—É—á–∏: ${poll.prize}!\n\n` +
      `–°–ª—É—á–∞–π–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞.`
    );
    
    console.log(`‚úÖ –û–ø—Ä–æ—Å —Å –ø—Ä–∏–∑–æ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–ø—Ä–æ—Å–∞:', error);
  }
}

// –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω–∫—É—Ä—Å–∞ –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è
async function publishContest() {
  if (!bot) return;
  
  try {
    const contests = [
      {
        title: 'üèÜ –ö–û–ù–ö–£–†–°: –õ—É—á—à–∏–π –∫–µ–π—Å —Å AI',
        description: '–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI –≤ —Ä–∞–±–æ—Ç–µ!',
        prize: '3 –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –ø–æ–ª—É—á–∞—Ç –º–µ—Å—è—Ü –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–µ–º–∏—É–º AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º',
        rules: [
          '1Ô∏è‚É£ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª',
          '2Ô∏è‚É£ –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –∫–µ–π—Å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö',
          '3Ô∏è‚É£ –ü—Ä–∏–≥–ª–∞—Å–∏ 3 –¥—Ä—É–∑–µ–π –≤ –∫–∞–Ω–∞–ª'
        ]
      },
      {
        title: 'üéØ –†–û–ó–´–ì–†–´–®: AI –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
        description: '–í—ã–∏–≥—Ä–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é AI!',
        prize: '1 —á–∞—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º',
        rules: [
          '1Ô∏è‚É£ –ë—É–¥—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞',
          '2Ô∏è‚É£ –ü–æ—Å—Ç–∞–≤—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ —ç—Ç–æ—Ç –ø–æ—Å—Ç',
          '3Ô∏è‚É£ –ù–∞–ø–∏—à–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö, –∫–∞–∫–∞—è –∑–∞–¥–∞—á–∞ —Ç—Ä–µ–±—É–µ—Ç AI'
        ]
      }
    ];
    
    const contest = contests[Math.floor(Math.random() * contests.length)];
    
    const message = `
${contest.title}

${contest.description}

üéÅ –ü—Ä–∏–∑: ${contest.prize}

üìã –£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è:
${contest.rules.join('\n')}

‚è∞ –ò—Ç–æ–≥–∏ —á–µ—Ä–µ–∑ 7 –¥–Ω–µ–π!

#–∫–æ–Ω–∫—É—Ä—Å #AI #—Ä–æ–∑—ã–≥—Ä—ã—à
    `;
    
    await bot.sendMessage(CHANNEL_ID, message);
    console.log(`‚úÖ –ö–æ–Ω–∫—É—Ä—Å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω–∫—É—Ä—Å–∞:', error);
  }
}

// –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–≤–∏–∑
async function publishQuiz() {
  if (!bot) return;
  
  try {
    const quizzes = [
      {
        question: 'üß† –ö–∞–∫–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Å–æ–∑–¥–∞–ª–∞ –∫–∞—Ä—Ç–∏–Ω—É "–ü–æ—Ä—Ç—Ä–µ—Ç –≠–¥–º–æ–Ω–¥–∞ –¥–µ –ë–µ–ª–∞–º–∏", –ø—Ä–æ–¥–∞–Ω–Ω—É—é –∑–∞ $432,500?',
        options: ['DALL-E', 'Midjourney', 'GAN (Generative Adversarial Network)', 'Stable Diffusion'],
        correctOption: 2,
        explanation: 'GAN –±—ã–ª–∞ –ø–µ—Ä–≤–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é, —á—å—è —Ä–∞–±–æ—Ç–∞ –±—ã–ª–∞ –ø—Ä–æ–¥–∞–Ω–∞ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ Christie\'s –≤ 2018 –≥–æ–¥—É!'
      },
      {
        question: 'üí° –°–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É GPT-4?',
        options: ['175 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤', '1 —Ç—Ä–∏–ª–ª–∏–æ–Ω', '–¢–æ—á–Ω–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', '500 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤'],
        correctOption: 2,
        explanation: 'OpenAI –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ GPT-4 –ø–æ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'
      }
    ];
    
    const quiz = quizzes[Math.floor(Math.random() * quizzes.length)];
    
    await bot.sendPoll(CHANNEL_ID, quiz.question, quiz.options, {
      is_anonymous: false,
      type: 'quiz',
      correct_option_id: quiz.correctOption,
      explanation: quiz.explanation
    });
    
    console.log(`‚úÖ –ö–≤–∏–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–≤–∏–∑–∞:', error);
  }
}

export function startTelegramBot() {
  if (!TELEGRAM_TOKEN) {
    console.log('‚ö†Ô∏è BOTTG —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω - Telegram –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω');
    return;
  }

  bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });
  
  console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}`);
  console.log('');
  
  cron.schedule('0 9 * * *', () => {
    console.log('‚è∞ –£—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç (9:00)');
    publishPost();
  });
  
  cron.schedule('0 15 * * *', () => {
    console.log('‚è∞ –î–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç (15:00)');
    publishPost();
  });
  
  cron.schedule('0 20 * * *', () => {
    console.log('‚è∞ –í–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç (20:00)');
    publishPost();
  });
  
  cron.schedule('0 12 * * 1,4', () => {
    console.log('‚è∞ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–ø—Ä–æ—Å–∞');
    publishPoll();
  });
  
  // –ö–æ–Ω–∫—É—Ä—Å—ã –∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00
  cron.schedule('0 10 * * 1', () => {
    console.log('‚è∞ –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—É—Ä—Å–∞');
    publishContest();
  });
  
  // –ö–≤–∏–∑—ã –∫–∞–∂–¥—É—é —Å—Ä–µ–¥—É –∏ –ø—è—Ç–Ω–∏—Ü—É –≤ 16:00
  cron.schedule('0 16 * * 3,5', () => {
    console.log('‚è∞ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–≤–∏–∑–∞');
    publishQuiz();
  });
  
  // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –≤ 21:00
  cron.schedule('0 21 * * *', async () => {
    console.log('‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º –±–æ–Ω—É—Å–µ');
    try {
      await bot!.sendMessage(CHANNEL_ID, 
        'üéÅ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!\n\n' +
        '–ù–µ –∑–∞–±—É–¥—å –ø–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å - –Ω–∞–ø–∏—à–∏ /daily –≤ –ª–∏—á–∫—É –±–æ—Ç—É!\n\n' +
        'üí∞ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å - –Ω–æ–≤—ã–µ –±–∞–ª–ª—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!'
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:', error);
    }
  });
  
  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –±–æ–Ω—É—Å–∞–º–∏
  bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from?.id;
    
    if (msg.new_chat_members) {
      const newMembers = msg.new_chat_members;
      
      for (const member of newMembers) {
        if (!member.is_bot) {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (userId) {
            userDatabase.set(userId, {
              username: msg.from?.username,
              firstName: msg.from?.first_name,
              joinDate: new Date(),
              referrals: 0,
              points: 10, // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–∞–ª–ª—ã
              isActive: true
            });
          }
          
          const welcomeMessage = `
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${member.first_name}!

üéÅ –¢—ã –ø–æ–ª—É—á–∏–ª 10 –±–∞–ª–ª–æ–≤ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!

üìö –ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç –≤ –∫–∞–Ω–∞–ª–µ:
‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ AI –∏–Ω—Å–∞–π—Ç—ã
‚úÖ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã
‚úÖ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≥–∞–π–¥—ã
‚úÖ –ö–æ–Ω–∫—É—Ä—Å—ã –∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏

üíé –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –±–∞–ª–ª–æ–≤:
‚Ä¢ 20 –±–∞–ª–ª–æ–≤ - –ø—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞
‚Ä¢ 30 –±–∞–ª–ª–æ–≤ - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
‚Ä¢ 50 –±–∞–ª–ª–æ–≤ - —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö

üèÜ –û–±–º–µ–Ω—è–π –±–∞–ª–ª—ã –Ω–∞:
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º –∫–æ–Ω—Ç–µ–Ω—Ç—É
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ AI —à–∞–±–ª–æ–Ω—ã

–ù–∞–±–µ—Ä–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥!
          `;
          
          await bot!.sendMessage(chatId, welcomeMessage);
        }
      }
    }
    
    // –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
    if (msg.text?.startsWith('/ref_')) {
      const referrerId = parseInt(msg.text.split('_')[1]);
      
      if (referrerId && userId && referrerId !== userId) {
        const referrer = userDatabase.get(referrerId);
        
        if (referrer) {
          // –ù–∞–≥—Ä–∞–∂–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
          referrer.referrals += 1;
          referrer.points += 20;
          
          // –ù–∞–≥—Ä–∞–∂–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const newUser = userDatabase.get(userId);
          if (newUser) {
            newUser.points += 10;
          }
          
          await bot!.sendMessage(chatId, 
            `üéâ –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!\n\n` +
            `–í—ã –ø–æ–ª—É—á–∏–ª–∏ +10 –±–∞–ª–ª–æ–≤, –∞ –≤–∞—à –¥—Ä—É–≥ +20 –±–∞–ª–ª–æ–≤!`
          );
          
          // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
          try {
            await bot!.sendMessage(referrerId, 
              `üéä –í–∞—à –¥—Ä—É–≥ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É!\n\n` +
              `–í—ã –ø–æ–ª—É—á–∏–ª–∏ +20 –±–∞–ª–ª–æ–≤! –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${referrer.referrals}`
            );
          } catch (e) {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞');
          }
        }
      }
    }
  });
  
  bot.onText(/\/post/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ—Å—Ç...');
    await publishPost();
  });
  
  bot.onText(/\/poll/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìä –°–æ–∑–¥–∞—é –æ–ø—Ä–æ—Å...');
    await publishPoll();
  });
  
  bot.onText(/\/stats/, async (msg) => {
    const chatId = msg.chat.id;
    const stats = `
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

‚úÖ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: 3
‚úÖ –û–ø—Ä–æ—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é: 2
‚úÖ AI –º–æ–¥–µ–ª—å: Grok 2
‚úÖ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}

–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
‚Ä¢ 09:00 - —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 15:00 - –¥–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç  
‚Ä¢ 20:00 - –≤–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 12:00 (–ü–Ω, –ß—Ç) - –æ–ø—Ä–æ—Å
    `;
    await bot!.sendMessage(chatId, stats);
  });

  bot.onText(/\/roll(?:\s+(\d+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = msg.from?.id;
    const maxNumber = match && match[1] ? parseInt(match[1]) : 6;
    
    if (maxNumber < 2 || maxNumber > 1000) {
      await bot!.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 2 –¥–æ 1000!\n–ü—Ä–∏–º–µ—Ä: /roll 100');
      return;
    }
    
    const result = Math.floor(Math.random() * maxNumber) + 1;
    
    // –ë–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã –∑–∞ —É–¥–∞—á—É
    if (userId && result === maxNumber) {
      const user = userDatabase.get(userId);
      if (user) {
        user.points += 5;
        await bot!.sendMessage(chatId, 
          `üé≤ –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞ (1-${maxNumber}):\n\n` +
          `üéØ –í—ã–ø–∞–ª–æ: ${result}\n\n` +
          `üéä –î–ñ–ï–ö–ü–û–¢! +5 –±–∞–ª–ª–æ–≤ –∑–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!`
        );
        return;
      }
    }
    
    await bot!.sendMessage(chatId, `üé≤ –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞ (1-${maxNumber}):\n\nüéØ –í—ã–ø–∞–ª–æ: ${result}`);
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
  bot.onText(/\/balance/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from?.id;
    
    if (!userId) return;
    
    const user = userDatabase.get(userId);
    
    if (!user) {
      await bot!.sendMessage(chatId, 
        '‚ùå –í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ –±–∞–ª–ª–æ–≤.\n\n' +
        '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –∫–∞–Ω–∞–ª—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–∞–ª–ª—ã!'
      );
      return;
    }
    
    const message = `
üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±–∞–ª–ª–æ–≤

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.firstName || user.username || '–£—á–∞—Å—Ç–Ω–∏–∫'}
üíé –ë–∞–ª–ª—ã: ${user.points}
üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${user.referrals}
üìÖ –í –∫–∞–Ω–∞–ª–µ —Å: ${user.joinDate.toLocaleDateString()}

üèÜ –ß—Ç–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å:
‚Ä¢ 100 –±–∞–ª–ª–æ–≤ - –ì–∞–π–¥ –ø–æ AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º
‚Ä¢ 200 –±–∞–ª–ª–æ–≤ - 30 –º–∏–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚Ä¢ 500 –±–∞–ª–ª–æ–≤ - –î–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º –∫–æ–Ω—Ç–µ–Ω—Ç—É (–º–µ—Å—è—Ü)
‚Ä¢ 1000 –±–∞–ª–ª–æ–≤ - –õ–∏—á–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ –Ω–µ–¥–µ–ª—é

üí° –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ:
/referral - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
/daily - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
    `;
    
    await bot!.sendMessage(chatId, message);
  });
  
  // –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞
  bot.onText(/\/referral/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from?.id;
    
    if (!userId) return;
    
    const user = userDatabase.get(userId);
    if (!user) {
      await bot!.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –∫–∞–Ω–∞–ª—É!');
      return;
    }
    
    const referralLink = `https://t.me/${CHANNEL_ID.replace('@', '')}?start=ref_${userId}`;
    
    const message = `
üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:

${referralLink}

üí∞ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:
‚Ä¢ 20 –±–∞–ª–ª–æ–≤ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É
‚Ä¢ 5 –±–∞–ª–ª–æ–≤ –∑–∞ –µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –ë–æ–Ω—É—Å—ã –∑–∞ —Ü–µ–ø–æ—á–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤

üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: ${user.referrals} –¥—Ä—É–∑–µ–π
üíé –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${user.referrals * 20} –±–∞–ª–ª–æ–≤

–ü–æ–¥–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–æ–ª—å—à–µ!
    `;
    
    await bot!.sendMessage(chatId, message);
  });
  
  // –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
  bot.onText(/\/daily/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from?.id;
    
    if (!userId) return;
    
    const user = userDatabase.get(userId);
    if (!user) {
      await bot!.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –∫–∞–Ω–∞–ª—É!');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è
    const today = new Date().toDateString();
    const lastDaily = (user as any).lastDaily;
    
    if (lastDaily === today) {
      await bot!.sendMessage(chatId, 
        '‚è∞ –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è!\n\n' +
        '–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤—ã–º–∏ –±–∞–ª–ª–∞–º–∏!'
      );
      return;
    }
    
    // –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å
    const bonus = Math.floor(Math.random() * 10) + 5; // 5-15 –±–∞–ª–ª–æ–≤
    user.points += bonus;
    (user as any).lastDaily = today;
    
    await bot!.sendMessage(chatId, 
      `üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω!\n\n` +
      `+${bonus} –±–∞–ª–ª–æ–≤\n` +
      `üí∞ –í—Å–µ–≥–æ: ${user.points} –±–∞–ª–ª–æ–≤\n\n` +
      `–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤—ã–º–∏ –±–æ–Ω—É—Å–∞–º–∏!`
    );
  });
  
  // –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  bot.onText(/\/top/, async (msg) => {
    const chatId = msg.chat.id;
    
    const topUsers = Array.from(userDatabase.entries())
      .sort((a, b) => b[1].points - a[1].points)
      .slice(0, 10);
    
    if (topUsers.length === 0) {
      await bot!.sendMessage(chatId, '–ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ.');
      return;
    }
    
    let message = 'üèÜ –¢–û–ü-10 –£–ß–ê–°–¢–ù–ò–ö–û–í\n\n';
    
    topUsers.forEach(([userId, user], index) => {
      const medal = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : `${index + 1}.`;
      message += `${medal} ${user.firstName || user.username || '–£—á–∞—Å—Ç–Ω–∏–∫'} - ${user.points} üíé\n`;
    });
    
    message += '\nüí° –ù–∞–±–∏—Ä–∞–π –±–∞–ª–ª—ã –∏ –ø–æ–ø–∞–¥–∏ –≤ —Ç–æ–ø!';
    
    await bot!.sendMessage(chatId, message);
  });
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å
  bot.onText(/\/help/, async (msg) => {
    const chatId = msg.chat.id;
    
    const helpMessage = `
üìö –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´

üéØ –û—Å–Ω–æ–≤–Ω—ã–µ:
/balance - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –±–∞–ª–ª–æ–≤
/referral - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
/daily - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
/top - —Ç–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

üé≤ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:
/roll [—á–∏—Å–ª–æ] - –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫
/post - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç —Å–µ–π—á–∞—Å
/poll - —Å–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞

üí° –°–∏—Å—Ç–µ–º–∞ –±–∞–ª–ª–æ–≤:
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞: +10 –±–∞–ª–ª–æ–≤
‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª: +20 –±–∞–ª–ª–æ–≤
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å: 5-15 –±–∞–ª–ª–æ–≤
‚Ä¢ –£—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö: –¥–æ 100 –±–∞–ª–ª–æ–≤
‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: +5 –±–∞–ª–ª–æ–≤

üèÜ –û–±–º–µ–Ω –±–∞–ª–ª–æ–≤:
‚Ä¢ 100 üíé - –ì–∞–π–¥ –ø–æ AI
‚Ä¢ 200 üíé - –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è 30 –º–∏–Ω
‚Ä¢ 500 üíé - –ü—Ä–µ–º–∏—É–º –¥–æ—Å—Ç—É–ø (–º–µ—Å—è—Ü)
‚Ä¢ 1000 üíé - AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç (–Ω–µ–¥–µ–ª—è)

üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}
    `;
    
    await bot!.sendMessage(chatId, helpMessage);
  });
  
  console.log('üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:');
  console.log('   ‚Ä¢ 09:00 (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ) - —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç');
  console.log('   ‚Ä¢ 15:00 (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ) - –¥–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç');
  console.log('   ‚Ä¢ 20:00 (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ) - –≤–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç');
  console.log('   ‚Ä¢ 10:00 (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫) - –∫–æ–Ω–∫—É—Ä—Å');
  console.log('   ‚Ä¢ 12:00 (–ü–Ω, –ß—Ç) - –æ–ø—Ä–æ—Å —Å –ø—Ä–∏–∑–æ–º');
  console.log('   ‚Ä¢ 16:00 (–°—Ä, –ü—Ç) - –∫–≤–∏–∑');
  console.log('   ‚Ä¢ 21:00 (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ) - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –±–æ–Ω—É—Å–µ');
  console.log('');
  console.log('üí° –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  console.log('   ‚Ä¢ /balance - –±–∞–ª–∞–Ω—Å –±–∞–ª–ª–æ–≤');
  console.log('   ‚Ä¢ /referral - —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞');
  console.log('   ‚Ä¢ /daily - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å');
  console.log('   ‚Ä¢ /top - —Ç–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤');
  console.log('   ‚Ä¢ /help - –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã');
  console.log('');
  console.log('üéÆ –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:');
  console.log('   ‚Ä¢ /post - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç —Å–µ–π—á–∞—Å');
  console.log('   ‚Ä¢ /poll - —Å–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å');
  console.log('   ‚Ä¢ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞');
  console.log('   ‚Ä¢ /roll [—á–∏—Å–ª–æ] - –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞');
}
