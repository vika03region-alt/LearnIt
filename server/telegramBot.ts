import TelegramBot from 'node-telegram-bot-api';
import cron from 'node-cron';
import OpenAI from 'openai';
import { storage } from './storage.js';

const TELEGRAM_TOKEN = process.env.BOTTG || '';
const CHANNEL_ID = '@IIPRB';

const grok = new OpenAI({
  apiKey: process.env.XAI_API_KEY || '',
  baseURL: 'https://api.x.ai/v1'
});

let bot: TelegramBot | null = null;
let isSchedulerPaused = false;
let isStarting = false;
let pollingActive = false;

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
const userPosts = new Map<number, string>();

// üõ°Ô∏è –ó–ê–©–ò–¢–ê –û–¢ –°–ü–ê–ú–ê –ò RATE LIMITING
const userCommandTimestamps = new Map<number, number[]>();
const userAIRequestTimestamps = new Map<number, number[]>();
const COMMAND_RATE_LIMIT = 5; // –∫–æ–º–∞–Ω–¥ –≤ –º–∏–Ω—É—Ç—É
const AI_RATE_LIMIT = 3; // AI –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
const RATE_LIMIT_WINDOW = 60000; // 1 –º–∏–Ω—É—Ç–∞

// üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
const commandStats = new Map<string, number>();
const userStats = new Map<number, {
  commands: number;
  aiRequests: number;
  postsCreated: number;
  lastActive: Date;
}>();

// üíæ –ö–≠–® –î–õ–Ø –ß–ê–°–¢–´–• –û–¢–í–ï–¢–û–í
const responseCache = new Map<string, { response: string; timestamp: number }>();
const CACHE_TTL = 3600000; // 1 —á–∞—Å

// üîí –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –≠–ö–ó–ï–ú–ü–õ–Ø–† –ë–û–¢–ê
let botInstanceId: string | null = null;

// üßπ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –û–ß–ò–°–¢–ö–ê –ö–≠–®–ê (–∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞)
setInterval(() => {
  const now = Date.now();
  let cleared = 0;

  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à
  for (const [key, value] of Array.from(responseCache.entries())) {
    if (now - value.timestamp > CACHE_TTL) {
      responseCache.delete(key);
      cleared++;
    }
  }

  // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ timestamps
  for (const [userId, timestamps] of Array.from(userCommandTimestamps.entries())) {
    const recent = timestamps.filter((t: number) => now - t < RATE_LIMIT_WINDOW);
    if (recent.length === 0) {
      userCommandTimestamps.delete(userId);
    } else {
      userCommandTimestamps.set(userId, recent);
    }
  }

  for (const [userId, timestamps] of Array.from(userAIRequestTimestamps.entries())) {
    const recent = timestamps.filter((t: number) => now - t < RATE_LIMIT_WINDOW);
    if (recent.length === 0) {
      userAIRequestTimestamps.delete(userId);
    } else {
      userAIRequestTimestamps.set(userId, recent);
    }
  }

  console.log(`üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞: —É–¥–∞–ª–µ–Ω–æ ${cleared} –∑–∞–ø–∏—Å–µ–π`);
}, 7200000); // 2 —á–∞—Å–∞

function checkRateLimit(userId: number, type: 'command' | 'ai'): boolean {
  const now = Date.now();
  const timestamps = type === 'command' 
    ? userCommandTimestamps.get(userId) || []
    : userAIRequestTimestamps.get(userId) || [];

  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ timestamps
  const recentTimestamps = timestamps.filter(t => now - t < RATE_LIMIT_WINDOW);

  const limit = type === 'command' ? COMMAND_RATE_LIMIT : AI_RATE_LIMIT;

  if (recentTimestamps.length >= limit) {
    return false;
  }

  recentTimestamps.push(now);

  if (type === 'command') {
    userCommandTimestamps.set(userId, recentTimestamps);
  } else {
    userAIRequestTimestamps.set(userId, recentTimestamps);
  }

  return true;
}

function updateUserStats(userId: number, action: 'command' | 'ai' | 'post') {
  const stats = userStats.get(userId) || {
    commands: 0,
    aiRequests: 0,
    postsCreated: 0,
    lastActive: new Date()
  };

  if (action === 'command') stats.commands++;
  if (action === 'ai') stats.aiRequests++;
  if (action === 'post') stats.postsCreated++;
  stats.lastActive = new Date();

  userStats.set(userId, stats);
}

function getCachedResponse(key: string): string | null {
  const cached = responseCache.get(key);
  if (cached && Date.now() - cached.timestamp < CACHE_TTL) {
    return cached.response;
  }
  responseCache.delete(key);
  return null;
}

function setCachedResponse(key: string, response: string): void {
  responseCache.set(key, { response, timestamp: Date.now() });
}

const contentTopics = [
  '–ö–∞–∫ ChatGPT —ç–∫–æ–Ω–æ–º–∏—Ç 5 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º',
  '–¢–û–ü-5 AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ 2025',
  '–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤: –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–µ–π—Å—ã',
  'AI –≤ –∫–æ—É—á–∏–Ω–≥–µ: –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
  '–ë—É–¥—É—â–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: —Ä–æ–ª—å AI –≤ –æ–±—É—á–µ–Ω–∏–∏',
  '–ü—Ä–∞–∫—Ç–∏–∫–∞: —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω —Å AI –∑–∞ 10 –º–∏–Ω—É—Ç',
  '–ö–∞–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å —Å–µ–±—è –ª—É—á—à–µ',
  '–¢–û–ü-3 –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å ChatGPT',
  'AI –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç',
  '–ù–µ–π—Ä–æ—Ö–∞–∫–∏–Ω–≥: –∫–∞–∫ —É–ª—É—á—à–∏—Ç—å –º—ã—à–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AI'
];

async function generatePost(topic: string): Promise<string> {
  try {
    const prompt = `–°–æ–∑–¥–∞–π –ø–æ—Å—Ç –¥–ª—è Telegram –ø—Ä–æ "${topic}". 300-500 —Å–∏–º–≤–æ–ª–æ–≤. –ù–∞—á–Ω–∏ —Å —ç–º–æ–¥–∑–∏, –¥–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å, –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é. –ê—É–¥–∏—Ç–æ—Ä–∏—è: –ø—Å–∏—Ö–æ–ª–æ–≥–∏, –∫–æ—É—á–∏, IT. –î–æ–±–∞–≤—å 3-5 —Ö–µ—à—Ç–µ–≥–æ–≤.`;

    const response = await grok.chat.completions.create({
      model: 'grok-2-latest',
      messages: [{ role: 'user', content: prompt }],
      temperature: 0.8,
      max_tokens: 500
    });

    return response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞';
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', error);
    return `ü§ñ AI –ò –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–¨\n\n–ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä—É—Ç–∏–Ω—ã!\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∏–Ω—Å–∞–π—Ç–æ–≤ üëâ ${CHANNEL_ID}\n\n#AI #–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å #–Ω–µ–π—Ä–æ—Å–µ—Ç–∏`;
  }
}

export async function publishPost() {
  if (!bot || isSchedulerPaused) {
    console.log('‚è∏Ô∏è –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–±–æ—Ç –Ω–∞ –ø–∞—É–∑–µ)');
    return;
  }

  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const telegramPlatform = await storage.getPlatformByName('telegram');
    if (telegramPlatform) {
      const scheduledPosts = await storage.getPostsByPlatformAndStatus(
        telegramPlatform.id, 
        'scheduled'
      );
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ—Å—Ç—ã –≥–æ—Ç–æ–≤—ã–µ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      const now = new Date();
      const postToPublish = scheduledPosts.find((post: any) => 
        post.scheduledAt && new Date(post.scheduledAt) <= now
      );

      if (postToPublish) {
        // –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç —Å –º–µ–¥–∏–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
        if (postToPublish.mediaUrls && postToPublish.mediaUrls.length > 0) {
          const videoUrl = postToPublish.mediaUrls[0]; // –ü–µ—Ä–≤—ã–π - —ç—Ç–æ –≤–∏–¥–µ–æ
          const coverUrl = postToPublish.mediaUrls[1]; // –í—Ç–æ—Ä–æ–π - —ç—Ç–æ –æ–±–ª–æ–∂–∫–∞

          if (videoUrl) {
            // –ü—É–±–ª–∏–∫—É–µ–º –≤–∏–¥–µ–æ (–æ–±–ª–æ–∂–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∞ –∏–∑ –≤–∏–¥–µ–æ)
            const caption = postToPublish.title 
              ? `${postToPublish.title}\n\n${postToPublish.content}`
              : postToPublish.content;

            await bot.sendVideo(CHANNEL_ID, videoUrl, {
              caption
            });
          } else {
            // –ü—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
            await bot.sendMessage(CHANNEL_ID, postToPublish.content);
          }
        } else {
          // –¢–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
          const text = postToPublish.title 
            ? `${postToPublish.title}\n\n${postToPublish.content}`
            : postToPublish.content;
          await bot.sendMessage(CHANNEL_ID, text);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å—Ç–∞
        await storage.updatePostStatus(postToPublish.id, 'published', new Date());
        
        console.log(`‚úÖ –ü–æ—Å—Ç –∏–∑ –ë–î –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${postToPublish.id}`);
        return { success: true, postId: postToPublish.id, fromDatabase: true };
      }
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π
    const randomTopic = contentTopics[Math.floor(Math.random() * contentTopics.length)];
    const postText = await generatePost(randomTopic);

    await bot.sendMessage(CHANNEL_ID, postText);
    console.log(`‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
    console.log(`üìù –¢–µ–º–∞: ${randomTopic}`);
    return { success: true, topic: randomTopic, text: postText, fromDatabase: false };
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error);
    throw error;
  }
}

async function publishPoll() {
  if (!bot || isSchedulerPaused) return;

  try {
    const question = '–ö–∞–∫–æ–π AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —á–∞—â–µ –≤—Å–µ–≥–æ?';
    const options = ['ChatGPT', 'Claude', 'Midjourney', '–î—Ä—É–≥–æ–π'];

    await bot.sendPoll(CHANNEL_ID, question, options, {
      is_anonymous: true,
      allows_multiple_answers: false
    });

    console.log(`‚úÖ –û–ø—Ä–æ—Å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω: ${new Date().toLocaleString()}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–ø—Ä–æ—Å–∞:', error);
  }
}

export async function startTelegramBot() {
  if (!TELEGRAM_TOKEN) {
    console.log('‚ö†Ô∏è BOTTG —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω - Telegram –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω');
    return;
  }

  // üîí –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
  const currentInstanceId = `bot_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;

  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  if (isStarting) {
    console.log('‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫');
    return;
  }

  isStarting = true;
  botInstanceId = currentInstanceId;

  try {
    // –ï—Å–ª–∏ –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
    if (bot) {
      console.log('üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞...');
      try {
        await bot.stopPolling({ cancel: true, reason: 'Restart requested' });
      } catch (e) {
        console.log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ:', e instanceof Error ? e.message : 'Unknown error');
      }
      bot = null;
      await new Promise(resolve => setTimeout(resolve, 3000));
    }

    // –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ webhook
    const tempBot = new TelegramBot(TELEGRAM_TOKEN, { polling: false });

    try {
      // –£–¥–∞–ª—è–µ–º webhook, –µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
      await tempBot.deleteWebHook();
      console.log('‚úÖ Webhook –æ—á–∏—â–µ–Ω');

      // –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞–º Telegram –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ webhook –∏ —Å—Ç–∞—Ä–æ–º—É —ç–∫–∑–µ–º–ø–ª—è—Ä—É –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è
      await new Promise(resolve => setTimeout(resolve, 5000));
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ webhook (–≤–æ–∑–º–æ–∂–Ω–æ, –µ–≥–æ –Ω–µ –±—ã–ª–æ)');
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç —Å polling
    bot = new TelegramBot(TELEGRAM_TOKEN, { 
      polling: {
        interval: 1000,
        autoStart: true,
        params: {
          timeout: 30
        }
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ polling
    let conflict409Count = 0;
    bot.on('polling_error', (error) => {
      if (error.message.includes('409')) {
        conflict409Count++;
        if (conflict409Count === 1) {
          console.log('‚ö†Ô∏è –ö–æ–Ω—Ñ–ª–∏–∫—Ç 409 –æ–±–Ω–∞—Ä—É–∂–µ–Ω - —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å—Ç–∞—Ä—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω');
          console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...');
          
          // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä
          if (bot) {
            bot.stopPolling({ cancel: true }).catch(() => {});
          }
          
          // –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
          setTimeout(() => {
            console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞...');
            startTelegramBot().catch(err => {
              console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:', err.message);
            });
          }, 5000);
        }
        return;
      }
      
      // –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ —Ç–∏—Ö–æ, –±–µ–∑ –ø–∞–Ω–∏–∫–∏
      if (!error.message.includes('ETELEGRAM')) {
        console.log('‚ö†Ô∏è Polling warning:', error.message.substring(0, 100));
      }
    });

  console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
  console.log(`üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}`);
  console.log('');

  // –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
  cron.schedule('0 9 * * *', () => {
    console.log('‚è∞ –£—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç (9:00)');
    publishPost();
  });

  cron.schedule('0 15 * * *', () => {
    console.log('‚è∞ –î–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç (15:00)');
    publishPost();
  });

  cron.schedule('0 20 * * *', () => {
    console.log('‚è∞ –í–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç (20:00)');
    publishPost();
  });

  cron.schedule('0 12 * * 1,4', () => {
    console.log('‚è∞ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–ø—Ä–æ—Å–∞');
    publishPoll();
  });

  // ====================================
  // –ë–ê–ó–û–í–´–ï –ö–û–ú–ê–ù–î–´
  // ====================================

  // üõ°Ô∏è Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ rate limit
  bot.on('message', async (msg) => {
    if (!msg.text?.startsWith('/')) return;

    const chatId = msg.chat.id;

    if (!checkRateLimit(chatId, 'command')) {
      await bot!.sendMessage(chatId, '‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      return;
    }

    updateUserStats(chatId, 'command');

    // –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–º–∞–Ω–¥
    const command = msg.text.split(' ')[0];
    commandStats.set(command, (commandStats.get(command) || 0) + 1);
  });

  bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const welcomeMessage = `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
   ü§ñ <b>AI –ü–û–ú–û–©–ù–ò–ö –î–õ–Ø TELEGRAM</b>
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–π –∫–∞–Ω–∞–ª üöÄ

<b>‚ú® –ß–¢–û –Ø –£–ú–ï–Æ:</b>

üé¨ <b>AI –í–ò–î–ï–û (–ë–ï–°–ü–õ–ê–¢–ù–û!)</b>
   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞
   ‚Ä¢ 100% –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –±–µ–∑ –ª–∏–º–∏—Ç–æ–≤
   ‚Ä¢ –ê–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª

üìù <b>–ö–û–ù–¢–ï–ù–¢</b>
   ‚Ä¢ –í–∏—Ä—É—Å–Ω—ã–µ –ø–æ—Å—Ç—ã –∏ –∏–¥–µ–∏
   ‚Ä¢ –•–µ—à—Ç–µ–≥–∏ –∏ —Ü–µ–ø–ª—è—é—â–∏–µ —Ö—É–∫–∏

üìä <b>–ê–ù–ê–õ–ò–¢–ò–ö–ê</b>
   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã
   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏

üöÄ <b>–ü–†–û–î–í–ò–ñ–ï–ù–ò–ï</b>
   ‚Ä¢ –ö–æ–Ω–∫—É—Ä—Å—ã –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
   ‚Ä¢ –ü–ª–∞–Ω —Ä–æ—Å—Ç–∞ –∫–∞–Ω–∞–ª–∞

üí¨ <b>AI –ê–°–°–ò–°–¢–ï–ù–¢</b>
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å - –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å—ë!

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üéØ /menu - –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
    `;
    await bot!.sendMessage(chatId, welcomeMessage, { parse_mode: 'HTML' });
  });

  bot.onText(/\/menu/, async (msg) => {
    const chatId = msg.chat.id;

    const menuMessage = `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
   üéØ <b>–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ</b>
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

<b>üé¨ AI –í–ò–î–ï–û (–ù–û–í–ò–ù–ö–ê!)</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/aivideo - –°–æ–∑–¥–∞—Ç—å AI –≤–∏–¥–µ–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ üé•
/uploadvideo - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—ë –≤–∏–¥–µ–æ üì§

<b>üìù –ö–û–ù–¢–ï–ù–¢</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/viral - –í–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç üî•
/ideas - –ò–¥–µ–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ üí°
/hashtags - –•–µ—à—Ç–µ–≥–∏ #Ô∏è‚É£
/hook - –¶–µ–ø–ª—è—é—â–∏–µ —Ö—É–∫–∏ üé£

<b>üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/analytics - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞ üìà
/viralcheck - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏ ‚úÖ
/trends - –¢—Ä–µ–Ω–¥—ã 2025 üî•

<b>üöÄ –ü–†–û–î–í–ò–ñ–ï–ù–ò–ï</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/contest - –ö–æ–Ω–∫—É—Ä—Å üéÅ
/quiz - –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ ‚ùì
/boost - –ü–ª–∞–Ω —Ä–æ—Å—Ç–∞ 30–¥ üìà

<b>‚öôÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/publish - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç üì§
/schedule - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚è∞
/help - –í—Å–µ –∫–æ–º–∞–Ω–¥—ã üìã

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí¨ <b>AI –ê–°–°–ò–°–¢–ï–ù–¢ –í–°–ï–ì–î–ê –ù–ê –°–í–Ø–ó–ò</b>
–ü–∏—à–∏ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å - –æ—Ç–≤–µ—á—É!
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

<b>‚ö° –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢:</b>
1Ô∏è‚É£ /aivideo - —Å–æ–∑–¥–∞–π –≤–∏–¥–µ–æ —Å AI
2Ô∏è‚É£ /viral - –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
3Ô∏è‚É£ /publish - –æ–ø—É–±–ª–∏–∫—É–π –≤ –∫–∞–Ω–∞–ª

üéØ –í—Å—ë –ø—Ä–æ—Å—Ç–æ! –ü–æ–ø—Ä–æ–±—É–π /aivideo
    `;
    await bot!.sendMessage(chatId, menuMessage, { parse_mode: 'HTML' });
  });

  bot.onText(/\/help/, async (msg) => {
    const chatId = msg.chat.id;
    const helpMessage = `
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
      üìö <b>–í–°–ï –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê</b>
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

<b>üé¨ AI –í–ò–î–ï–û (–ù–û–í–ò–ù–ö–ê!)</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/aivideo - –°–æ–∑–¥–∞—Ç—å AI –≤–∏–¥–µ–æ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ) üé•
/uploadvideo - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—ë –≤–∏–¥–µ–æ üì§

<b>üè† –û–°–ù–û–í–ù–´–ï</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>üìù –ö–û–ù–¢–ï–ù–¢</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/viral - –í–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç üî•
/ideas - –ò–¥–µ–∏ –¥–ª—è –ø–æ—Å—Ç–æ–≤ üí°
/hook - –¶–µ–ø–ª—è—é—â–∏–µ —Ö—É–∫–∏ üé£
/hashtags - –•–µ—à—Ç–µ–≥–∏ #Ô∏è‚É£
/rewrite - –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç ‚úçÔ∏è

<b>üì§ –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/publish - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç üì§
/post - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
/poll - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–ø—Ä–æ—Å üìä

<b>üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/analytics - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞ üìà
/viralcheck - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏ ‚úÖ
/trends - –¢—Ä–µ–Ω–¥—ã 2025 üî•
/growth - –ü—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞ üìä
/spy - –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ üîç

<b>üöÄ –ü–†–û–î–í–ò–ñ–ï–ù–ò–ï</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/contest - –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω–∫—É—Ä—Å üéÅ
/quiz - –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ ‚ùì
/boost - –ü–ª–∞–Ω —Ä–æ—Å—Ç–∞ 30–¥ üìà
/magnet - –õ–∏–¥-–º–∞–≥–Ω–∏—Ç üß≤
/challenge - –ß–µ–ª–ª–µ–Ω–¥–∂ üí™

<b>‚öôÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
/schedule - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ ‚è∞
/pause - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ ‚è∏Ô∏è
/resume - –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å ‚ñ∂Ô∏è
/mystats - –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ‚≠ê

<b>üí¨ AI –ê–°–°–ò–°–¢–ï–ù–¢</b>
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å—ã - –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å—ë!

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üéØ /menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

<b>üí° –°–û–í–ï–¢:</b> –ù–∞—á–Ω–∏ —Å /aivideo –∏–ª–∏ /viral
    `;
    await bot!.sendMessage(chatId, helpMessage, { parse_mode: 'HTML' });
  });

  // ====================================
  // –î–ï–ô–°–¢–í–ò–Ø
  // ====================================

  // ====================================
  // –ì–ï–ù–ï–†–ê–¶–ò–Ø –ò –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø
  // ====================================

  bot.onText(/\/post/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é AI –ø–æ—Å—Ç...');
    try {
      await publishPost();
      await bot!.sendMessage(chatId, '‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ!');
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞.');
    }
  });

  bot.onText(/\/poll/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìä –°–æ–∑–¥–∞—é –æ–ø—Ä–æ—Å...');
    try {
      await publishPoll();
      await bot!.sendMessage(chatId, '‚úÖ –û–ø—Ä–æ—Å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ!');
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–ø—Ä–æ—Å–∞.');
    }
  });

  // ====================================
  // –ì–ï–ù–ï–†–ê–¶–ò–Ø –ö–û–ù–¢–ï–ù–¢–ê
  // ====================================

  bot.onText(/\/publish/, async (msg) => {
    const chatId = msg.chat.id;
    const savedPost = userPosts.get(chatId);

    if (!savedPost) {
      await bot!.sendMessage(chatId, '‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞!\n\nüí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –ø–æ—Å—Ç:\n/viral - –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç\n/contest - –∫–æ–Ω–∫—É—Ä—Å\n/challenge - —á–µ–ª–ª–µ–Ω–¥–∂');
      return;
    }

    try {
      await bot!.sendMessage(chatId, 'üì§ –ü—É–±–ª–∏–∫—É—é –≤ –∫–∞–Ω–∞–ª...');
      await bot!.sendMessage(CHANNEL_ID, savedPost);
      await bot!.sendMessage(chatId, `‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ ${CHANNEL_ID}!`);

      // –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      userPosts.delete(chatId);
      console.log(`‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${chatId} –ø–æ –∫–æ–º–∞–Ω–¥–µ /publish`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', error);
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ.');
    }
  });

  bot.onText(/\/ideas(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const niche = match && match[1] ? match[1] : 'AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏';

    await bot!.sendMessage(chatId, 'üí° –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–¥–µ–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');

    try {
      const prompt = `5 –∏–¥–µ–π –¥–ª—è –ø–æ—Å—Ç–æ–≤ –≤ Telegram –ø—Ä–æ "${niche}". –ö–∞–∂–¥–∞—è: –∑–∞–≥–æ–ª–æ–≤–æ–∫ + 1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 600
      });

      const ideas = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏';
      await bot!.sendMessage(chatId, `üí° –ò–î–ï–ò –î–õ–Ø –ö–û–ù–¢–ï–ù–¢–ê\n\n–ù–∏—à–∞: ${niche}\n\n${ideas}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–¥–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });

  bot.onText(/\/viral(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match && match[1] ? match[1] : 'AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã';

    await bot!.sendMessage(chatId, 'üöÄ –°–æ–∑–¥–∞—é –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç...');

    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–´–ô –ø–æ—Å—Ç –¥–ª—è Telegram –ø—Ä–æ "${topic}": —Å–∏–ª—å–Ω—ã–π —Ö—É–∫, —ç–º–æ—Ü–∏–∏, —Ü–µ–Ω–Ω–æ—Å—Ç—å, 350-600 —Å–∏–º–≤–æ–ª–æ–≤, —ç–º–æ–¥–∑–∏.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 600
      });

      const viralPost = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏';

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      userPosts.set(chatId, viralPost);

      await bot!.sendMessage(chatId, `üöÄ –í–ò–†–£–°–ù–´–ô –ü–û–°–¢:\n\n${viralPost}\n\n‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!\n\nüí° –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:\n‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: /publish\n‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏: "–æ–ø—É–±–ª–∏–∫—É–π"`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });

  bot.onText(/\/hashtags(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match && match[1] ? match[1] : contentTopics[0];

    await bot!.sendMessage(chatId, '#Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ö–µ—à—Ç–µ–≥–∏...');

    try {
      const prompt = `10 —Ö–µ—à—Ç–µ–≥–æ–≤ –¥–ª—è –ø–æ—Å—Ç–∞ "${topic}": 5 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö, 5 –Ω–∏—à–µ–≤—ã—Ö. –§–æ—Ä–º–∞—Ç: #—Ö–µ—à—Ç–µ–≥ - –æ–ø–∏—Å–∞–Ω–∏–µ`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 400
      });

      const hashtags = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏';
      await bot!.sendMessage(chatId, `#Ô∏è‚É£ –•–ï–®–¢–ï–ì–ò:\n\n${hashtags}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö–µ—à—Ç–µ–≥–æ–≤.');
    }
  });

  bot.onText(/\/rewrite\s+(.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const text = match && match[1] ? match[1] : '';

    if (!text) {
      await bot!.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç!\n\n–ü—Ä–∏–º–µ—Ä: /rewrite –í–∞—à —Ç–µ–∫—Å—Ç');
      return;
    }

    await bot!.sendMessage(chatId, '‚úçÔ∏è –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é —Ç–µ–∫—Å—Ç...');

    try {
      const prompt = `–ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç: –∂–∏–≤–æ–π —Å—Ç–∏–ª—å, —ç–º–æ–¥–∑–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞. –¢–µ–∫—Å—Ç: "${text}"`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 500
      });

      const rewritten = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `‚úçÔ∏è –ü–ï–†–ï–ü–ò–°–ê–ù–ù–´–ô –¢–ï–ö–°–¢:\n\n${rewritten}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.');
    }
  });

  // ====================================
  // –ê–ù–ê–õ–ò–¢–ò–ö–ê
  // ====================================

  bot.onText(/\/analytics/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìä –ü–æ–ª—É—á–∞—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É...');

    const analytics = `üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê –ö–ê–ù–ê–õ–ê

üì¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}

üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞:
‚Ä¢ –ü–æ—Å—Ç–æ–≤: 3/–¥–µ–Ω—å
‚Ä¢ –û–ø—Ä–æ—Å–æ–≤: 2/–Ω–µ–¥–µ–ª—é
‚Ä¢ AI –º–æ–¥–µ–ª—å: Grok 2
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å—Ç–∞: ~$0.0001

‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
‚Ä¢ 09:00 - —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 15:00 - –¥–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç
‚Ä¢ 20:00 - –≤–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 12:00 (–ü–Ω/–ß—Ç) - –æ–ø—Ä–æ—Å—ã

üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ
‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±—é–¥–∂–µ—Ç–Ω–∞—è AI –º–æ–¥–µ–ª—å
‚úÖ –û–ø—Ä–æ—Å—ã –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç

–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: /report
–î–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ —Ä–æ—Å—Ç–∞: /growth`;

    await bot!.sendMessage(chatId, analytics);
  });

  bot.onText(/\/growth/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞...');

    try {
      const prompt = `–ü—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI: –¥–µ–Ω—å/–Ω–µ–¥–µ–ª—è/–º–µ—Å—è—Ü. –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–æ—Å—Ç–∞ –∏ –∫–∞–∫ —É—Å–∫–æ—Ä–∏—Ç—å. –î–æ 400 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 500
      });

      const growth = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üìà –ü–†–û–ì–ù–û–ó –†–û–°–¢–ê\n\n${growth}\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /crosspromo –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞.');
    }
  });

  bot.onText(/\/report/, async (msg) => {
    const chatId = msg.chat.id;
    const date = new Date().toLocaleDateString('ru-RU');

    const report = `üìã –û–¢–ß–ï–¢ –ó–ê ${date}

üìä –ü–£–ë–õ–ò–ö–ê–¶–ò–ò:
‚úÖ –ü–æ—Å—Ç–æ–≤: 3/–¥–µ–Ω—å
‚úÖ –û–ø—Ä–æ—Å–æ–≤: 2/–Ω–µ–¥–µ–ª—é
‚úÖ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: Grok 2
‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å: $0.0003/–¥–µ–Ω—å

üí∞ –≠–ö–û–ù–û–ú–ò–ö–ê:
‚Ä¢ –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ AI: $0.01/–º–µ—Å—è—Ü
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è vs GPT-4: 90%
‚Ä¢ ROI: –æ—Ç–ª–∏—á–Ω—ã–π

üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
1. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /spy –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
3. –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ /viralcheck –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π
4. –°–ª–µ–¥–∏—Ç–µ –∑–∞ /trends

‚úÖ –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –Ω–æ—Ä–º–µ!
–°—Ç–∞—Ç—É—Å: ${isSchedulerPaused ? '‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ' : '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'}`;

    await bot!.sendMessage(chatId, report);
  });

  // ====================================
  // –ü–†–û–î–í–ò–ñ–ï–ù–ò–ï
  // ====================================

  bot.onText(/\/crosspromo/, async (msg) => {
    const chatId = msg.chat.id;

    const crossPromo = `ü§ù –ö–†–û–°–°-–ü–†–û–ú–û

–í–∑–∞–∏–º–Ω—ã–π –ø–∏–∞—Ä - —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Ä–æ—Å—Ç–∞!

üìä –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:
1. –ù–∞–π–¥–∏—Ç–µ –∫–∞–Ω–∞–ª—ã –≤–∞—à–µ–π –Ω–∏—à–∏ (500-5–ö)
2. –î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ–± –æ–±–º–µ–Ω–µ –ø–æ—Å—Ç–∞–º–∏
3. –ü—É–±–ª–∏–∫—É–π—Ç–µ –ø—Ä–æ –∫–∞–Ω–∞–ª –ø–∞—Ä—Ç–Ω–µ—Ä–∞
4. –ü–æ–ª—É—á–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

üéØ –ì–¥–µ –∏—Å–∫–∞—Ç—å:
‚Ä¢ @tgchannels
‚Ä¢ @PR_Baza
‚Ä¢ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º—å—é–Ω–∏—Ç–∏

üí° –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:
‚úÖ –ö–æ–Ω–≤–µ—Ä—Å–∏—è: 5-15%
‚úÖ –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ

üìù –®–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è:
"–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –∫–∞–Ω–∞–ª –ø—Ä–æ AI (${CHANNEL_ID}). –ü—Ä–µ–¥–ª–∞–≥–∞—é –≤–∑–∞–∏–º–Ω—ã–π –ø–æ—Å—Ç. –ê—É–¥–∏—Ç–æ—Ä–∏—è –±–ª–∏–∑–∫–∞—è!"

üí° –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:
/spy - —à–ø–∏–æ–Ω–∞–∂ –∑–∞ –∫–∞–Ω–∞–ª–∞–º–∏
/niche - –∞–Ω–∞–ª–∏–∑ –Ω–∏—à–∏
/competitors - –¢–û–ü –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤`;

    await bot!.sendMessage(chatId, crossPromo);
  });

  bot.onText(/\/competitors/, async (msg) => {
    const chatId = msg.chat.id;
    await bot!.sendMessage(chatId, 'üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–¢–û–ü-3 Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:

–î–ª—è –∫–∞–∂–¥–æ–≥–æ —É–∫–∞–∂–∏:
1. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
2. –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª-–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
3. –ß—Ç–æ –¥–µ–ª–∞—é—Ç –•–û–†–û–®–û (—Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã)
4. –ß—Ç–æ –¥–µ–ª–∞—é—Ç –ü–õ–û–•–û (—Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞)
5. –ß—Ç–æ –º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å

–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É. –î–æ 600 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 700
      });

      const competitors = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üîç –¢–û–ü-3 –ö–û–ù–ö–£–†–ï–ù–¢–ê\n\n${competitors}\n\nüí° –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑: /spy [–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞]`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.');
    }
  });

  bot.onText(/\/chatlist/, async (msg) => {
    const chatId = msg.chat.id;

    const chatList = `üí¨ –ß–ê–¢–´ –î–õ–Ø –ü–†–û–î–í–ò–ñ–ï–ù–ò–Ø

üéØ <b>AI/Tech —á–∞—Ç—ã:</b>
‚Ä¢ @ai_chat_ru - AI —Å–æ–æ–±—â–µ—Å—Ç–≤–æ
‚Ä¢ @chatgpt_community - ChatGPT –æ–±—Å—É–∂–¥–µ–Ω–∏—è
‚Ä¢ @neural_networks_chat - –ù–µ–π—Ä–æ—Å–µ—Ç–∏

üì¢ <b>–ü—Ä–æ–º–æ-—á–∞—Ç—ã:</b>
‚Ä¢ @prbartertg - –ë–∞—Ä—Ç–µ—Ä –∏ –æ–±–º–µ–Ω
‚Ä¢ @channel_promo - –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
‚Ä¢ @free_pr_chat - –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π PR

üíº <b>–ë–∏–∑–Ω–µ—Å —á–∞—Ç—ã:</b>
‚Ä¢ @startupru - –°—Ç–∞—Ä—Ç–∞–ø—ã
‚Ä¢ @marketologiru - –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥

üí° <b>–ü—Ä–∞–≤–∏–ª–∞ —É—Å–ø–µ—Ö–∞:</b>
‚ùå –ù–ï —Å–ø–∞–º—å—Ç–µ —Ä–µ–∫–ª–∞–º–æ–π
‚úÖ –î–∞–≤–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
‚úÖ –ë—É–¥—å—Ç–µ —ç–∫—Å–ø–µ—Ä—Ç–æ–º –≤ —Ç–µ–º–µ
‚úÖ –ü–æ–º–æ–≥–∞–π—Ç–µ –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º

üìä <b>–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b>
‚Ä¢ +30-50 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤/–º–µ—Å—è—Ü
‚Ä¢ –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
‚Ä¢ –ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ –∏ —Å–≤—è–∑–∏

üöÄ <b>–°—Ç—Ä–∞—Ç–µ–≥–∏—è:</b>
1. –í—Å—Ç—É–ø–∏—Ç–µ –≤ 5-10 —á–∞—Ç–æ–≤
2. –ë—É–¥—å—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã 2-3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å
3. –î–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º, –Ω–µ —Ä–µ–∫–ª–∞–º–æ–π
4. –£–ø–æ–º–∏–Ω–∞–π—Ç–µ –∫–∞–Ω–∞–ª –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ`;

    await bot!.sendMessage(chatId, chatList, { parse_mode: 'HTML' });
  });

  // ====================================
  // –£–¢–ò–õ–ò–¢–´
  // ====================================

  bot.onText(/\/schedule/, async (msg) => {
    const chatId = msg.chat.id;

    const schedule = `üìÖ –†–ê–°–ü–ò–°–ê–ù–ò–ï –ü–£–ë–õ–ò–ö–ê–¶–ò–ô

‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø–æ—Å—Ç—ã:
‚Ä¢ 09:00 - –£—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 15:00 - –î–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç
‚Ä¢ 20:00 - –í–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç

üìä –û–ø—Ä–æ—Å—ã:
‚Ä¢ 12:00 (–ü–Ω, –ß—Ç)

ü§ñ AI: Grok 2
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ~$0.0001/–ø–æ—Å—Ç

–°—Ç–∞—Ç—É—Å: ${isSchedulerPaused ? '‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ' : '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ'}

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
/pause - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
/resume - –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
/post - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å`;

    await bot!.sendMessage(chatId, schedule);
  });

  bot.onText(/\/pause/, async (msg) => {
    const chatId = msg.chat.id;
    isSchedulerPaused = true;

    await bot!.sendMessage(chatId, `‚è∏Ô∏è –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –û–°–¢–ê–ù–û–í–õ–ï–ù–´

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Å—Ç—ã –∏ –æ–ø—Ä–æ—Å—ã –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.

–ß—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å:
/resume - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞
/post - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –≤—Ä—É—á–Ω—É—é

–°—Ç–∞—Ç—É—Å: ‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ`);
  });

  bot.onText(/\/resume/, async (msg) => {
    const chatId = msg.chat.id;
    isSchedulerPaused = false;

    await bot!.sendMessage(chatId, `‚ñ∂Ô∏è –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –í–û–ó–û–ë–ù–û–í–õ–ï–ù–´

–ê–≤—Ç–æ–ø–∏–ª–æ—Ç —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω!

‚è∞ –°–ª–µ–¥—É—é—â–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:
‚Ä¢ 09:00 - —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
‚Ä¢ 15:00 - –¥–Ω–µ–≤–Ω–æ–π –ø–æ—Å—Ç
‚Ä¢ 20:00 - –≤–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç

–°—Ç–∞—Ç—É—Å: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω`);
  });

  bot.onText(/\/settings/, async (msg) => {
    const chatId = msg.chat.id;

    const settings = `‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê

üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:
‚Ä¢ AI –º–æ–¥–µ–ª—å: Grok 2
‚Ä¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}
‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å: 3
‚Ä¢ –û–ø—Ä–æ—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é: 2
‚Ä¢ –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π

‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
‚Ä¢ 09:00, 15:00, 20:00 - –ø–æ—Å—Ç—ã
‚Ä¢ 12:00 (–ü–Ω/–ß—Ç) - –æ–ø—Ä–æ—Å—ã

üí∞ –≠–∫–æ–Ω–æ–º–∏–∫–∞:
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å—Ç–∞: $0.0001
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è vs GPT-4: 90%
‚Ä¢ –†–∞—Å—Ö–æ–¥ –≤ –º–µ—Å—è—Ü: ~$0.01

üìà –°—Ç–∞—Ç—É—Å: ${isSchedulerPaused ? '‚è∏Ô∏è –ù–∞ –ø–∞—É–∑–µ' : '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω'}

üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
/pause - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—é
/resume - –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—é
/schedule - –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ`;

    await bot!.sendMessage(chatId, settings);
  });

  // ====================================
  // –†–ï–ñ–ò–ú –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Ø
  // ====================================

  bot.onText(/\/niche(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const niche = match && match[1] ? match[1] : 'AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏';

    await bot!.sendMessage(chatId, 'üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–∏—à—É... ‚è≥ 10-15 —Å–µ–∫');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ê–Ω–∞–ª–∏–∑ –Ω–∏—à–∏ "${niche}" –≤ Telegram 2025:
1. –†–∞–∑–º–µ—Ä —Ä—ã–Ω–∫–∞ –∏ —Ä–æ—Å—Ç
2. –¢–û–ü-3 –∏–≥—Ä–æ–∫–∞ (–∞—É–¥–∏—Ç–æ—Ä–∏—è, –£–¢–ü, —Å–ª–∞–±–æ—Å—Ç–∏)
3. –¢—Ä–µ–Ω–¥—ã –∏ –ø—Ä–æ–±–µ–ª—ã
4. –°—Ç—Ä–∞—Ç–µ–≥–∏—è –≤—Ö–æ–¥–∞
5. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 1200
      });

      const analysis = response.choices[0].message.content || '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞';
      await bot!.sendMessage(chatId, `üìä –ê–ù–ê–õ–ò–ó –ù–ò–®–ò: ${niche}\n\n${analysis}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∏—à–∏.');
    }
  });

  bot.onText(/\/spy(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const competitor = match && match[1] ? match[1] : '—Ç–æ–ø–æ–≤—ã–µ AI –∫–∞–Ω–∞–ª—ã';

    await bot!.sendMessage(chatId, 'üïµÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è —Ä–∞–∑–≤–µ–¥–∫–∞ "${competitor}":
1. –ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è (—Ç–µ–º—ã, —Ñ–æ—Ä–º–∞—Ç—ã, —á–∞—Å—Ç–æ—Ç–∞)
2. –í–æ–≤–ª–µ—á–µ–Ω–∏–µ (—Ç—Ä–∏–≥–≥–µ—Ä—ã)
3. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è
4. –°–ª–∞–±—ã–µ –º–µ—Å—Ç–∞
5. –ß—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å (—Ç–æ–ø-3)
6. –ö–∞–∫ –æ–±–æ–π—Ç–∏ (–£–¢–ü)

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 1200
      });

      const spyReport = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üïµÔ∏è –ö–û–ù–ö–£–†–ï–ù–¢–ù–ê–Ø –†–ê–ó–í–ï–î–ö–ê\n\n${spyReport}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —à–ø–∏–æ–Ω–∞–∂–∞.');
    }
  });

  bot.onText(/\/trends/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç—Ä–µ–Ω–¥—ã 2025...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ì–ª–∞–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã Telegram –æ–∫—Ç—è–±—Ä—å 2025:
1. –ö–æ–Ω—Ç–µ–Ω—Ç-—Ç—Ä–µ–Ω–¥—ã (—Ç–æ–ø-5 —Ñ–æ—Ä–º–∞—Ç–æ–≤)
2. Telegram-—Ñ–∏—á–∏ 2025 (Stories, Mini Apps, Stars)
3. –ü–æ–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
4. –§–æ—Ä–º–∞—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–∑—Ä—ã–≤–∞—é—Ç
5. 3 –∏–¥–µ–∏ –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –°–ï–ì–û–î–ù–Ø

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 1200
      });

      const trends = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üìà –¢–†–ï–ù–î–´ 2025\n\n${trends}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–Ω–¥–æ–≤.');
    }
  });

  bot.onText(/\/optimize/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, '‚è∞ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞—é –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:
1. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º (—É—Ç—Ä–æ/–¥–µ–Ω—å/–≤–µ—á–µ—Ä)
2. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º
3. –¢–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
4. –¢–æ–ø-3 –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–∞
5. A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

–î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 1000
      });

      const optimization = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `‚è∞ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –í–†–ï–ú–ï–ù–ò\n\n${optimization}\n\nüí° –¢–µ–∫—É—â–µ–µ: 09:00, 15:00, 20:00`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.');
    }
  });

  bot.onText(/\/viralcheck\s+(.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const content = match && match[1] ? match[1] : '';

    if (!content) {
      await bot!.sendMessage(chatId, '‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç!\n\n–ü—Ä–∏–º–µ—Ä: /viralcheck –≤–∞—à —Ç–µ–∫—Å—Ç');
      return;
    }

    await bot!.sendMessage(chatId, 'üî• –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∏—Ä—É—Å–Ω–æ—Å—Ç—å...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ê–Ω–∞–ª–∏–∑ –≤–∏—Ä—É—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: "${content}"

–û—Ü–µ–Ω–∏ (0-10):
1. –•—É–∫ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
2. –≠–º–æ—Ü–∏–∏
3. –¶–µ–Ω–Ω–æ—Å—Ç—å
4. –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ
5. –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
6. –í–∏–∑—É–∞–ª—å–Ω–æ—Å—Ç—å

–ò–¢–û–ì–û: /60

–ß–¢–û –£–õ–£–ß–®–ò–¢–¨ (—Ç–æ–ø-3)
–î–û–†–ê–ë–û–¢–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

–î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 1000
      });

      const viralAnalysis = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üî• –ê–ù–ê–õ–ò–ó –í–ò–†–£–°–ù–û–°–¢–ò\n\n${viralAnalysis}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞.');
    }
  });

  bot.onText(/\/audience/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üë• –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ü—Ä–æ—Ñ–∏–ª—å –¶–ê –¥–ª—è –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:
1. –î–µ–º–æ–≥—Ä–∞—Ñ–∏—è (–≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, –≥–æ—Ä–æ–¥–∞)
2. –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏ (% –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤/IT/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)
3. –ë–æ–ª–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ (—Ç–æ–ø-5)
4. –ü–æ–≤–µ–¥–µ–Ω–∏–µ –≤ Telegram
5. –£—Ä–æ–≤–µ–Ω—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã (–Ω–æ–≤–∏—á–∫–∏/—ç–∫—Å–ø–µ—Ä—Ç—ã)
6. –ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
7. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è (—á—Ç–æ –∫—É–ø—è—Ç, —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫)

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 1200
      });

      const audienceProfile = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üë• –ü–†–û–§–ò–õ–¨ –ê–£–î–ò–¢–û–†–ò–ò\n\n${audienceProfile}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏.');
    }
  });

  // üé® –í–ò–ó–£–ê–õ–¨–ù–´–ô AI-–ö–û–ù–¢–ï–ù–¢
  bot.onText(/\/visual/, async (msg) => {
    const chatId = msg.chat.id;
    const menu = `
üé® –í–ò–ó–£–ê–õ–¨–ù–´–ô AI-–ö–û–ù–¢–ï–ù–¢

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:

/cover - üñºÔ∏è –û–±–ª–æ–∂–∫–∞ –¥–ª—è –∫–∞–Ω–∞–ª–∞
/illustration - üé® –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç–∞
/meme - üòÇ –ú–µ–º –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è
/infographic - üìä –ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
/voiceover - üéôÔ∏è –û–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞
/videoscript - üé¨ –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–¥–µ–æ
/uploadvideo - üìπ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—ë –≤–∏–¥–µ–æ
/designtemplate - üé≠ –î–∏–∑–∞–π–Ω-—à–∞–±–ª–æ–Ω
/contentpack - üì¶ –ú–∞—Å—Å–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–∞–∫

üí° –ü—Ä–∏–º–µ—Ä—ã:
/cover –º–∏–Ω–∏–º–∞–ª–∏–∑–º - —Å–æ–∑–¥–∞—Ç—å –æ–±–ª–æ–∂–∫—É
/meme "–∫–æ–≥–¥–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å —Å—Ä–∞–±–æ—Ç–∞–ª" - –º–µ–º
/voiceover "–ü—Ä–∏–≤–µ—Ç, —Ç—Ä–µ–π–¥–µ—Ä—ã!" - –æ–∑–≤—É—á–∫–∞
/uploadvideo - –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª`;

    await bot!.sendMessage(chatId, menu);
  });

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±–ª–æ–∂–∫–∏
  bot.onText(/\/cover (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const style = match?.[1] || '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª';
    
    await bot!.sendMessage(chatId, 'üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±–ª–æ–∂–∫—É –¥–ª—è –∫–∞–Ω–∞–ª–∞...');
    
    try {
      const { visualContentAI } = await import('./services/visualContentAI');
      const result = await visualContentAI.generateChannelCover('trading', style as any);
      
      await bot!.sendPhoto(chatId, result.url!, {
        caption: `‚úÖ –û–±–ª–æ–∂–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!\n\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: $${result.cost.toFixed(3)}\nüìù –°—Ç–∏–ª—å: ${style}`
      });
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–ª–æ–∂–∫–∏');
    }
  });

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–º–∞
  bot.onText(/\/meme (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const scenario = match?.[1] || 'trader problems';
    
    await bot!.sendMessage(chatId, 'üòÇ –°–æ–∑–¥–∞—é –º–µ–º...');
    
    try {
      const { visualContentAI } = await import('./services/visualContentAI');
      const result = await visualContentAI.generateMeme(scenario, 'relatable');
      
      await bot!.sendPhoto(chatId, result.url!, {
        caption: `‚úÖ –ú–µ–º –≥–æ—Ç–æ–≤!\n\nüìù ${scenario}\nüí∞ $${result.cost.toFixed(3)}`
      });
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–∞');
    }
  });

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–∑–≤—É—á–∫–∏
  bot.onText(/\/voiceover (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const text = match?.[1];
    
    if (!text) {
      await bot!.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏: /voiceover –≤–∞—à —Ç–µ–∫—Å—Ç');
      return;
    }
    
    await bot!.sendMessage(chatId, 'üéôÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–∑–≤—É—á–∫—É...');
    
    try {
      const { visualContentAI } = await import('./services/visualContentAI');
      const result = await visualContentAI.generateVoiceover(text, 'onyx', 1.0);
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º base64 –≤ Buffer –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const base64Data = result.url!.replace('data:audio/mp3;base64,', '');
      const audioBuffer = Buffer.from(base64Data, 'base64');
      
      await bot!.sendVoice(chatId, audioBuffer, {
        caption: `‚úÖ –û–∑–≤—É—á–∫–∞ –≥–æ—Ç–æ–≤–∞!\n\nüìù ${text.substring(0, 100)}...\nüí∞ $${result.cost.toFixed(3)}`
      });
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–∑–≤—É—á–∫–∏');
    }
  });

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ-—Å–∫—Ä–∏–ø—Ç–∞
  bot.onText(/\/videoscript (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match?.[1];
    
    if (!topic) {
      await bot!.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É: /videoscript —Ç–µ–º–∞ –≤–∏–¥–µ–æ');
      return;
    }
    
    await bot!.sendMessage(chatId, 'üé¨ –°–æ–∑–¥–∞—é —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–¥–µ–æ...');
    
    try {
      const { visualContentAI } = await import('./services/visualContentAI');
      const result = await visualContentAI.generateVideoScript(topic, 60, 'professional');
      
      let response = `üé¨ –í–ò–î–ï–û-–°–ö–†–ò–ü–¢\n\n–¢–µ–º–∞: ${topic}\n\n`;
      response += `üìù –ü–û–õ–ù–´–ô –°–ö–†–ò–ü–¢:\n${result.script}\n\n`;
      response += `üé≠ –°–¶–ï–ù–´:\n`;
      
      result.scenes.forEach((scene, i) => {
        response += `${i + 1}. ${scene.text} (${scene.duration}—Å)\n   üí° ${scene.visual_cue}\n\n`;
      });
      
      response += `üéôÔ∏è –ò–ù–°–¢–†–£–ö–¶–ò–ò:\n${result.voiceover_instructions}`;
      
      await bot!.sendMessage(chatId, response);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞');
    }
  });

  // AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ (Hugging Face - –±–µ—Å–ø–ª–∞—Ç–Ω–æ!)
  bot.onText(/\/aivideo(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match?.[1];

    if (!topic) {
      const helpMsg = `üé¨ <b>AI –ì–ï–ù–ï–†–ê–¢–û–† –í–ò–î–ï–û (100% –ë–ï–°–ü–õ–ê–¢–ù–û!)</b>

üåü <b>–ß—Ç–æ —ç—Ç–æ?</b>
–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é AI.
Hugging Face LTX-Video - –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –±–µ–∑ –ª–∏–º–∏—Ç–æ–≤!

üìπ <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</b>
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 5-10 —Å–µ–∫—É–Ω–¥
‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 768√ó512 (–∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π)
‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å: 10-20 —Å–µ–∫—É–Ω–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: $0.00 (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞!)

üí° <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
/aivideo [–æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º]

üìù <b>–ü—Ä–∏–º–µ—Ä—ã:</b>
‚Ä¢ /aivideo bitcoin rocket to the moon
‚Ä¢ /aivideo trader analyzing crypto charts
‚Ä¢ /aivideo golden coins falling from sky
‚Ä¢ /aivideo stock market bull run visualization

‚ú® <b>–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</b>
1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–µ, —á–µ—Ç–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
2. –£–∫–∞–∂–∏—Ç–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
3. –î–æ–±–∞–≤—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (cinematic, professional)
4. –ù–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ

‚ö° –ü–æ–ø—Ä–æ–±—É–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
–ü—Ä–∏–º–µ—Ä: /aivideo crypto trading success story`;
      
      await bot!.sendMessage(chatId, helpMsg, { parse_mode: 'HTML' });
      return;
    }

    try {
      await bot!.sendMessage(chatId, 'üé¨ –ì–µ–Ω–µ—Ä–∏—Ä—É—é AI –≤–∏–¥–µ–æ... (10-20 —Å–µ–∫—É–Ω–¥)\n\n‚ú® –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Hugging Face LTX-Video\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: $0.00 (–±–µ—Å–ø–ª–∞—Ç–Ω–æ!)');

      // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
      const { huggingFaceVideoService } = await import('./services/huggingFaceVideoService.js');

      // –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –≤–∏–¥–µ–æ
      const videoPrompt = `${topic}. Professional trading finance content, cinematic lighting, high quality, smooth camera movement, modern style.`;

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∏–¥–µ–æ
      const result = await huggingFaceVideoService.generateTextToVideo(videoPrompt, {
        duration: 5,
        mode: 'std'
      });

      if (result.status === 'completed' && result.videoUrl) {
        await bot!.sendMessage(chatId, `‚úÖ <b>AI –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!</b>

üìπ –û–ø–∏—Å–∞–Ω–∏–µ: ${topic}
‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 5 —Å–µ–∫—É–Ω–¥
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: $0.00

üöÄ –í–∏–¥–µ–æ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏...`, { parse_mode: 'HTML' });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        await bot!.sendVideo(chatId, result.videoUrl, {
          caption: `üé¨ AI –í–∏–¥–µ–æ: ${topic}\n\n‚ú® –°–æ–∑–¥–∞–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å Hugging Face LTX-Video`
        });

        await bot!.sendMessage(chatId, '‚ú® –•–æ—á–µ—à—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —ç—Ç–æ –≤–∏–¥–µ–æ –≤ –∫–∞–Ω–∞–ª?\n–ò—Å–ø–æ–ª—å–∑—É–π /publish –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!');
      } else {
        await bot!.sendMessage(chatId, '‚è≥ –í–∏–¥–µ–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ AI –≤–∏–¥–µ–æ:', error);
      await bot!.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ

üí° <b>–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:</b>
1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: /menu ‚Üí AI Video Studio
3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ—ë –≤–∏–¥–µ–æ: /uploadvideo

<b>–ü—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏:</b>
‚Ä¢ –ú–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è (–ø–æ–¥–æ–∂–¥–∏—Ç–µ 20 —Å–µ–∫)
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫`, { parse_mode: 'HTML' });
    }
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
  bot.onText(/\/uploadvideo/, async (msg) => {
    const chatId = msg.chat.id;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    let appUrl = '';
    if (process.env.REPLIT_DEV_DOMAIN) {
      appUrl = `https://${process.env.REPLIT_DEV_DOMAIN}`;
    } else if (process.env.REPL_SLUG && process.env.REPL_OWNER) {
      appUrl = `https://${process.env.REPL_SLUG}--${process.env.REPL_OWNER}.repl.co`;
    } else {
      appUrl = 'https://your-app-url.com';
    }
    
    const message = `<b>üìπ –ó–ê–ì–†–£–ó–ò–¢–¨ –í–ò–î–ï–û</b>

–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:

üîó ${appUrl}/telegram-post

<b>‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –¥–æ 500MB
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏ (–ø—Ä–µ–≤—å—é)
‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è

<b>üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b>
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ
2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª (–¥–æ 500MB)
3. –î–æ–±–∞–≤—å—Ç–µ –æ–±–ª–æ–∂–∫—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
4. –£–∫–∞–∂–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
5. –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
6. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç"

<b>ü§ñ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—É–±–ª–∏–∫—É–µ—Ç –≤–∏–¥–µ–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è!</b>`;
    
    await bot!.sendMessage(chatId, message, { parse_mode: 'HTML' });
  });

  // –ú–∞—Å—Å–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  bot.onText(/\/contentpack/, async (msg) => {
    const chatId = msg.chat.id;
    
    await bot!.sendMessage(chatId, 'üì¶ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–∞–∫ (—ç—Ç–æ –∑–∞–π–º–µ—Ç 1-2 –º–∏–Ω—É—Ç—ã)...');
    
    try {
      const { visualContentAI } = await import('./services/visualContentAI');
      const result = await visualContentAI.generateContentPack({
        niche: 'crypto trading',
        posts: 5,
        style: '—Ñ—É—Ç—É—Ä–∏–∑–º'
      });
      
      let response = `‚úÖ –ö–û–ù–¢–ï–ù–¢-–ü–ê–ö –ì–û–¢–û–í!\n\n`;
      response += `üñºÔ∏è –û–±–ª–æ–∂–µ–∫: ${result.covers.length}\n`;
      response += `üé® –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π: ${result.illustrations.length}\n`;
      response += `üòÇ –ú–µ–º–æ–≤: ${result.memes.length}\n\n`;
      response += `üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${result.totalCost.toFixed(2)}\n\n`;
      response += `üì• –ö–æ–Ω—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!`;
      
      await bot!.sendMessage(chatId, response);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–ª–æ–∂–∫–∏
      for (const cover of result.covers) {
        await bot!.sendPhoto(chatId, cover.url!, { caption: 'üñºÔ∏è –û–±–ª–æ–∂–∫–∞ –∫–∞–Ω–∞–ª–∞' });
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä—É –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–π
      for (let i = 0; i < Math.min(2, result.illustrations.length); i++) {
        await bot!.sendPhoto(chatId, result.illustrations[i].url!, { 
          caption: `üé® –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è #${i + 1}` 
        });
      }
      
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–∞–∫–∞');
    }
  });

  // üöÄ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –î–õ–Ø –ù–û–í–ò–ß–ö–û–í
  bot.onText(/\/quickstart/, async (msg) => {
    const chatId = msg.chat.id;

    const guide = `üöÄ –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢

–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∑–∞ 5 –º–∏–Ω—É—Ç.

<b>–®–ê–ì 1: –°–æ–∑–¥–∞–π –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç</b>
–ö–æ–º–∞–Ω–¥–∞: /viral
–ß—Ç–æ –ø–æ–ª—É—á–∏—à—å: AI —Å–æ–∑–¥–∞—Å—Ç –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç

<b>–®–ê–ì 2: –û–ø—É–±–ª–∏–∫—É–π</b>
–ö–æ–º–∞–Ω–¥–∞: /publish
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏: "–æ–ø—É–±–ª–∏–∫—É–π"

<b>–®–ê–ì 3: –ù–∞—Å—Ç—Ä–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é</b>
–ö–æ–º–∞–Ω–¥–∞: /autopilot
–ß—Ç–æ –ø–æ–ª—É—á–∏—à—å: –∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—é 3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å

<b>–®–ê–ì 4: –ü–æ–ª—É—á–∏ –ø–ª–∞–Ω —Ä–æ—Å—Ç–∞</b>
–ö–æ–º–∞–Ω–¥–∞: /boost
–ß—Ç–æ –ø–æ–ª—É—á–∏—à—å: —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞ 30 –¥–Ω–µ–π

<b>–®–ê–ì 5: –°–ª–µ–¥–∏ –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏</b>
–ö–æ–º–∞–Ω–¥–∞: /analytics
–ß—Ç–æ –ø–æ–ª—É—á–∏—à—å: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí° –°–û–í–ï–¢–´:
‚Ä¢ –ù–∞—á–Ω–∏ —Å /viral
‚Ä¢ –ü—É–±–ª–∏–∫—É–π 2-3 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π AI –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
‚Ä¢ –°–º–æ—Ç—Ä–∏ /mystats –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

üéØ –ì–û–¢–û–í? –ù–∞—á–Ω–∏ —Å: /viral`;

    await bot!.sendMessage(chatId, guide, { parse_mode: 'HTML' });
  });

  // üéì –û–ë–£–ß–ï–ù–ò–ï
  bot.onText(/\/learn/, async (msg) => {
    const chatId = msg.chat.id;

    const lessons = `üéì –û–ë–£–ß–ê–Æ–©–ò–ï –£–†–û–ö–ò

<b>–£–†–û–ö 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</b>
‚Ä¢ /viral - –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç
‚Ä¢ /hook - —Ü–µ–ø–ª—è—é—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏  
‚Ä¢ /hashtags - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ö–µ—à—Ç–µ–≥–∏
üëâ –ù–∞—á–Ω–∏ —Å: /viral —Ç–µ–º–∞

<b>–£–†–û–ö 2: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞</b>
‚Ä¢ /analytics - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞
‚Ä¢ /viralcheck - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å—Ç–∞
‚Ä¢ /mystats - —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å
üëâ –ù–∞—á–Ω–∏ —Å: /analytics

<b>–£–†–û–ö 3: –ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ</b>
‚Ä¢ /boost - –ø–ª–∞–Ω –Ω–∞ 30 –¥–Ω–µ–π
‚Ä¢ /crosspromo - –∫—Ä–æ—Å—Å-–ø—Ä–æ–º–æ
‚Ä¢ /competitors - –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
üëâ –ù–∞—á–Ω–∏ —Å: /boost

<b>–£–†–û–ö 4: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</b>
‚Ä¢ /autopilot - –∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è
‚Ä¢ /schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
‚Ä¢ /pause - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
üëâ –ù–∞—á–Ω–∏ —Å: /autopilot

<b>–£–†–û–ö 5: AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</b>
‚Ä¢ /contest - –∫–æ–Ω–∫—É—Ä—Å
‚Ä¢ /challenge - —á–µ–ª–ª–µ–Ω–¥–∂
‚Ä¢ /magnet - –ª–∏–¥-–º–∞–≥–Ω–∏—Ç
üëâ –ù–∞—á–Ω–∏ —Å: /contest

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üìö –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫: /help
üí¨ –í–æ–ø—Ä–æ—Å—ã? –ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏ –º–µ–Ω—è!`;

    await bot!.sendMessage(chatId, lessons, { parse_mode: 'HTML' });
  });

  // üéØ –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ô –ü–û–ú–û–©–ù–ò–ö
  bot.onText(/\/suggest/, async (msg) => {
    const chatId = msg.chat.id;
    const stats = userStats.get(chatId);

    const hour = new Date().getHours();
    let suggestion = '';

    if (!stats || stats.commands < 5) {
      suggestion = `üåü –¢–´ –ù–û–í–ò–ß–û–ö!

–†–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞—á–∞—Ç—å —Å:
1. /quickstart - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
2. /viral - —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç
3. /learn - –æ–±—É—á–∞—é—â–∏–µ —É—Ä–æ–∫–∏

–≠—Ç–æ –∑–∞–π–º–µ—Ç 5 –º–∏–Ω—É—Ç! üöÄ`;
    } else if (hour >= 9 && hour <= 11) {
      suggestion = `‚òÄÔ∏è –£–¢–†–ï–ù–ù–Ø–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨

–°–µ–π—á–∞—Å –æ—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è:
1. /viral - —Å–æ–∑–¥–∞—Ç—å —É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç
2. /analytics - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
3. /trends - —É–∑–Ω–∞—Ç—å —Ç—Ä–µ–Ω–¥—ã –¥–Ω—è

–ü—É–±–ª–∏–∫—É–π –≤ 9-11! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ—Ö–≤–∞—Ç! üìà`;
    } else if (hour >= 14 && hour <= 16) {
      suggestion = `üå§Ô∏è –î–ù–ï–í–ù–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨

–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è:
1. /engage - —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è
2. /crosspromo - –Ω–∞–π—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
3. /spy - –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤

–í—Ä–µ–º—è –∫—Ä–æ—Å—Å-–ø—Ä–æ–º–æ! ü§ù`;
    } else if (hour >= 19 && hour <= 21) {
      suggestion = `üåô –í–ï–ß–ï–†–ù–Ø–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨

–ü–∏–∫–æ–≤–æ–µ –≤—Ä–µ–º—è! –°–¥–µ–ª–∞–π:
1. /viral - –≤–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç (–º–∞–∫—Å –æ—Ö–≤–∞—Ç!)
2. /story - –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Stories
3. /poll - –æ–ø—Ä–æ—Å –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è

–í–µ—á–µ—Ä–æ–º –º–∞–∫—Å–∏–º—É–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏! üî•`;
    } else {
      suggestion = `üí§ –ù–û–ß–ù–û–ï –í–†–ï–ú–Ø

–ú–æ–∂–µ—à—å:
1. /blueprint - –ø–ª–∞–Ω –Ω–∞ –∑–∞–≤—Ç—Ä–∞
2. /niche - –∞–Ω–∞–ª–∏–∑ –Ω–∏—à–∏
3. /boost - —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–æ—Å—Ç–∞

–ò–ª–∏ –æ—Ç–¥–æ—Ö–Ω–∏! –ó–∞–≤—Ç—Ä–∞ –≤ 9:00 –ø—É–±–ª–∏–∫—É–π! üò¥`;
    }

    await bot!.sendMessage(chatId, suggestion);
  });

  bot.onText(/\/audience/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üë• –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ü—Ä–æ—Ñ–∏–ª—å –¶–ê –¥–ª—è –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:
1. –î–µ–º–æ–≥—Ä–∞—Ñ–∏—è (–≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, –≥–æ—Ä–æ–¥–∞)
2. –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏ (% –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤/IT/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)
3. –ë–æ–ª–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ (—Ç–æ–ø-5)
4. –ü–æ–≤–µ–¥–µ–Ω–∏–µ –≤ Telegram
5. –£—Ä–æ–≤–µ–Ω—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã (–Ω–æ–≤–∏—á–∫–∏/—ç–∫—Å–ø–µ—Ä—Ç—ã)
6. –ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
7. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è (—á—Ç–æ –∫—É–ø—è—Ç, —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫)

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.7,
        max_tokens: 1200
      });

      const audienceProfile = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üë• –ü–†–û–§–ò–õ–¨ –ê–£–î–ò–¢–û–†–ò–ò\n\n${audienceProfile}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏.');
    }
  });

  bot.onText(/\/blueprint/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üéØ –°–æ–∑–¥–∞—é –ü–õ–ê–ù –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Ø... ‚è≥ 15-20 —Å–µ–∫');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ü–ª–∞–Ω –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤:

1. –ú–ï–°–Ø–¶ 1-2: –§–£–ù–î–ê–ú–ï–ù–¢ (–∫–æ–Ω—Ç–µ–Ω—Ç, –ø–µ—Ä–≤–∞—è 1000)
2. –ú–ï–°–Ø–¶ 3-4: –†–û–°–¢ (–≤–∏—Ä—É—Å—ã, –∫—Ä–æ—Å—Å-–ø—Ä–æ–º–æ, —Ä–µ–∫–ª–∞–º–∞)
3. –ú–ï–°–Ø–¶ 5-6: –õ–ò–î–ï–†–°–¢–í–û (–ø—Ä–æ–¥—É–∫—Ç—ã, –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞)
4. –ö–æ–Ω—Ç–µ–Ω—Ç-–º–∞—Ç—Ä–∏—Ü–∞ 70/20/10
5. –î–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è
6. –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è (—ç—Ç–∞–ø—ã)
7. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
8. –ú–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—Ö–∞ (KPI)

–î–æ 1500 —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 1800
      });

      const blueprint = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üéØ –ü–õ–ê–ù –î–û–ú–ò–ù–ò–†–û–í–ê–ù–ò–Ø\n\n${blueprint}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞.');
    }
  });

  bot.onText(/\/autopilot/, async (msg) => {
    const chatId = msg.chat.id;

    const autopilotInfo = `ü§ñ –†–ï–ñ–ò–ú –ê–í–¢–û–ü–ò–õ–û–¢–ê

‚úÖ –ß–¢–û –†–ê–ë–û–¢–ê–ï–¢ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò:
‚Ä¢ 3 –ø–æ—Å—Ç–∞ –≤ –¥–µ–Ω—å (09:00, 15:00, 20:00)
‚Ä¢ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Grok 2
‚Ä¢ –û–ø—Ä–æ—Å—ã 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ç—Ä–µ–Ω–¥—ã

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
‚Ä¢ –ü–æ—Å—Ç–æ–≤ –≤ –º–µ—Å—è—Ü: ~90
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å AI: $0.01/–º–µ—Å—è—Ü
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏: 15 —á–∞—Å–æ–≤/–º–µ—Å—è—Ü
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ: —Å—Ç–∞–±–∏–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ–µ

üéØ –ß–¢–û –î–ï–õ–ê–¢–¨ –í–ê–ú:
1. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å /analytics
2. –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
3. –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å /blueprint
4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å /viralcheck

üí° –ü–†–û–î–í–ò–ù–£–¢–´–ï –§–ò–ß–ò:
‚Ä¢ /niche - –∞–Ω–∞–ª–∏–∑ –Ω–∏—à–∏
‚Ä¢ /spy - —à–ø–∏–æ–Ω–∞–∂
‚Ä¢ /trends - —Ç—Ä–µ–Ω–¥—ã
‚Ä¢ /optimize - –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
‚Ä¢ /audience - –ø—Ä–æ—Ñ–∏–ª—å –¶–ê

‚úÖ –ê–≤—Ç–æ–ø–∏–ª–æ—Ç ${isSchedulerPaused ? '‚è∏Ô∏è –ù–ê –ü–ê–£–ó–ï' : '–ê–ö–¢–ò–í–ï–ù'}!
–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7.`;

    await bot!.sendMessage(chatId, autopilotInfo);
  });

  // ====================================
  // AI-–ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –ü–†–û–î–í–ò–ñ–ï–ù–ò–Ø
  // ====================================

  bot.onText(/\/contest/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üéÅ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ö–û–ù–ö–£–†–° –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–´–ô –ö–û–ù–ö–£–†–° –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:

1. –ú–ï–•–ê–ù–ò–ö–ê (–ø—Ä–æ—Å—Ç–∞—è –∏ –ø–æ–Ω—è—Ç–Ω–∞—è):
   - –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É
   - –£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è
   - –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è

2. –ü–†–ò–ó–´ (—Ü–µ–Ω–Ω—ã–µ –¥–ª—è –¶–ê):
   - –ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑
   - 2-3 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–∞
   - –¶–µ–Ω–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ

3. –¢–ï–ö–°–¢ –ü–û–°–¢–ê (300-400 —Å–∏–º–≤–æ–ª–æ–≤):
   - –¶–µ–ø–ª—è—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
   - –ü—Ä–∏–∑—ã
   - –£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è
   - –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
   - –î–µ–¥–ª–∞–π–Ω

4. –¢–†–ò–ì–ì–ï–†–´ –í–û–í–õ–ï–ß–ï–ù–ò–Ø:
   - –ü–æ—á–µ–º—É –∑–∞—Ö–æ—á–µ—Ç—Å—è —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
   - –ö–∞–∫ —É–≤–µ–ª–∏—á–∏—Ç—å –æ—Ö–≤–∞—Ç

–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ—Å—Ç –≥–æ—Ç–æ–≤—ã–π –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –î–æ 600 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 800
      });

      const contest = response.choices[0].message.content || '–û—à–∏–±–∫–∞';

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      userPosts.set(chatId, contest);

      await bot!.sendMessage(chatId, `üéÅ –í–ò–†–£–°–ù–´–ô –ö–û–ù–ö–£–†–°\n\n${contest}\n\n‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!\n\nüí° –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:\n‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: /publish\n‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏: "–æ–ø—É–±–ª–∏–∫—É–π"`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω–∫—É—Ä—Å–∞.');
    }
  });

  bot.onText(/\/quiz/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üéØ –°–æ–∑–¥–∞—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –í–ò–ö–¢–û–†–ò–ù–£...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–£–Æ –í–ò–ö–¢–û–†–ò–ù–£ –¥–ª—è Telegram –ø—Ä–æ AI:

1. –¢–ï–ú–ê: —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ
2. –§–û–†–ú–ê–¢: 5 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤
3. –ö–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å:
   - –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å
   - 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
   - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
   - –ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ

–°–¥–µ–ª–∞–π —Ç–∞–∫ —á—Ç–æ–±—ã –ª—é–¥–∏ –¥–µ–ª–∏–ª–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏!
–î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 1000
      });

      const quiz = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üéØ –í–ò–ö–¢–û–†–ò–ù–ê\n\n${quiz}\n\nüí° –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –∫–∞–∫ —Å–µ—Ä–∏—é –æ–ø—Ä–æ—Å–æ–≤!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã.');
    }
  });

  bot.onText(/\/hook/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'ü™ù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –¶–ï–ü–õ–Ø–Æ–©–ò–ï –•–£–ö–ò...');

    try {
      const prompt = `–°–æ–∑–¥–∞–π 10 –ú–û–©–ù–´–• —Ö—É–∫–æ–≤ (–ø–µ—Ä–≤—ã—Ö —Å—Ç—Ä–æ–∫) –¥–ª—è –ø–æ—Å—Ç–æ–≤ –ø—Ä–æ AI:

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –í—ã–∑—ã–≤–∞—é—Ç —à–æ–∫/—É–¥–∏–≤–ª–µ–Ω–∏–µ
- –°–æ–∑–¥–∞—é—Ç –∏–Ω—Ç—Ä–∏–≥—É
- –û–±–µ—â–∞—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–ª—å–∑—É
- –ó–∞—Å—Ç–∞–≤–ª—è—é—Ç —á–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ

–ü—Ä–∏–º–µ—Ä—ã:
"üö® ChatGPT —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å—ç–∫–æ–Ω–æ–º–∏–ª –º–Ω–µ $5000..."
"‚ùå 97% –ª—é–¥–µ–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç AI –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –í–æ—Ç –∫–∞–∫ –Ω–∞–¥–æ..."
"üí∞ –≠—Ç–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–Ω–µ $500/–¥–µ–Ω—å..."

–§–æ—Ä–º–∞—Ç: —ç–º–æ–¥–∑–∏ + —Ü–µ–ø–ª—è—é—â–∞—è —Ñ—Ä–∞–∑–∞ (1 —Å—Ç—Ä–æ–∫–∞)
–î–æ 500 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 600
      });

      const hooks = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `ü™ù –¶–ï–ü–õ–Ø–Æ–©–ò–ï –•–£–ö–ò\n\n${hooks}\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –Ω–∞—á–∞–ª–µ –ø–æ—Å—Ç–æ–≤!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö—É–∫–æ–≤.');
    }
  });

  bot.onText(/\/magnet/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üß≤ –°–æ–∑–¥–∞—é –õ–ò–î-–ú–ê–ì–ù–ò–¢...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–°–æ–∑–¥–∞–π –ú–û–©–ù–´–ô –ª–∏–¥-–º–∞–≥–Ω–∏—Ç –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤ AI –∫–∞–Ω–∞–ª:

1. –ß–¢–û –ü–†–ï–î–õ–û–ñ–ò–¢–¨ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–æ –æ—á–µ–Ω—å —Ü–µ–Ω–Ω–æ):
   - PDF –≥–∞–π–¥ / —á–µ–∫-–ª–∏—Å—Ç / —à–∞–±–ª–æ–Ω—ã
   - –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ (–∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞)
   - –¶–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏

2. –¢–ï–ö–°–¢ –ü–û–°–¢–ê –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è (300-400 —Å–∏–º–≤–æ–ª–æ–≤):
   - –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≤—ã–≥–æ–¥–æ–π
   - –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç —á–µ–ª–æ–≤–µ–∫
   - –ü—Ä–∏–∑—ã–≤ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è

3. –ö–ê–ö –î–û–°–¢–ê–í–ò–¢–¨:
   - –ß–µ—Ä–µ–∑ –±–æ—Ç–∞ / –∫–∞–Ω–∞–ª / –≥—Ä—É–ø–ø—É
   - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è

4. –¢–†–ò–ì–ì–ï–†–´:
   - –ü–æ—á–µ–º—É –∑–∞—Ö–æ—á–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å
   - FOMO (—É–ø—É—â–µ–Ω–Ω–∞—è –≤—ã–≥–æ–¥–∞)

–ì–æ—Ç–æ–≤—ã–π –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ª–∏–¥-–º–∞–≥–Ω–∏—Ç. –î–æ 700 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 900
      });

      const magnet = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üß≤ –õ–ò–î-–ú–ê–ì–ù–ò–¢\n\n${magnet}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏–¥-–º–∞–≥–Ω–∏—Ç–∞.');
    }
  });

  bot.onText(/\/boost/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üöÄ –°–æ–∑–¥–∞—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ë–´–°–¢–†–û–ì–û –†–û–°–¢–ê...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ü–ª–∞–Ω –ë–´–°–¢–†–û–ì–û –†–û–°–¢–ê Telegram –∫–∞–Ω–∞–ª–∞ –∑–∞ 30 –¥–Ω–µ–π:

1. –ù–ï–î–ï–õ–Ø 1: –§–£–ù–î–ê–ú–ï–ù–¢ (–¥–Ω–∏ 1-7)
   - 3 –¥–µ–π—Å—Ç–≤–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
   - –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: +50-100 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

2. –ù–ï–î–ï–õ–Ø 2: –í–ò–†–£–° (–¥–Ω–∏ 8-14)
   - –í–∏—Ä—É—Å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏
   - –ö–æ–Ω–∫—É—Ä—Å—ã –∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏
   - –†–µ–∑—É–ª—å—Ç–∞—Ç: +200-300

3. –ù–ï–î–ï–õ–Ø 3: –ú–ê–°–®–¢–ê–ë (–¥–Ω–∏ 15-21)
   - –ü–ª–∞—Ç–Ω–æ–µ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ (–±—é–¥–∂–µ—Ç $50-100)
   - –ö—Ä–æ—Å—Å-–ø—Ä–æ–º–æ —Å 5-10 –∫–∞–Ω–∞–ª–∞–º–∏
   - –†–µ–∑—É–ª—å—Ç–∞—Ç: +300-500

4. –ù–ï–î–ï–õ–Ø 4: –£–î–ï–†–ñ–ê–ù–ò–ï (–¥–Ω–∏ 22-30)
   - –í–æ–≤–ª–µ—á–µ–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
   - –ö–æ–Ω—Ç–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–ø–æ—Å—Ç—è—Ç
   - –†–µ–∑—É–ª—å—Ç–∞—Ç: +200-300

–ò–¢–û–ì–û –ó–ê –ú–ï–°–Ø–¶: 750-1200 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

–ö–û–ù–ö–†–ï–¢–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø –Ω–∞ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é.
–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 1200
      });

      const boost = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üöÄ –ü–õ–ê–ù –ë–´–°–¢–†–û–ì–û –†–û–°–¢–ê (30 –î–ù–ï–ô)\n\n${boost}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞ —Ä–æ—Å—Ç–∞.');
    }
  });

  bot.onText(/\/story/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üì± –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è STORIES...');

    try {
      const prompt = `–°–æ–∑–¥–∞–π 5 –∏–¥–µ–π –¥–ª—è Telegram Stories –ø—Ä–æ AI:

–ö–∞–∂–¥–∞—è –∏—Å—Ç–æ—Ä–∏—è:
1. –¢–ï–ú–ê (—Ü–µ–ø–ª—è—é—â–∞—è)
2. –¢–ï–ö–°–¢ (–∫–æ—Ä–æ—Ç–∫–∏–π, 50-100 —Å–∏–º–≤–æ–ª–æ–≤)
3. –í–ò–ó–£–ê–õ (—á—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å/–Ω–∞–ø–∏—Å–∞—Ç—å)
4. –ü–†–ò–ó–´–í –ö –î–ï–ô–°–¢–í–ò–Æ (—Å–≤–∞–π–ø –≤–≤–µ—Ä—Ö / —Ä–µ–∞–∫—Ü–∏—è)

–§–æ—Ä–º–∞—Ç—ã:
- –§–∞–∫—Ç + —ç–º–æ–¥–∑–∏
- –í–æ–ø—Ä–æ—Å –∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
- –ë—ã—Å—Ç—Ä—ã–π —Å–æ–≤–µ—Ç
- –ó–∞ –∫—É–ª–∏—Å–∞–º–∏
- –û–ø—Ä–æ—Å / Quiz

–î–æ 600 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 700
      });

      const stories = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üì± –ö–û–ù–¢–ï–ù–¢ –î–õ–Ø STORIES\n\n${stories}\n\nüí° –ü—É–±–ª–∏–∫—É–π—Ç–µ 2-3 Stories –≤ –¥–µ–Ω—å!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Stories.');
    }
  });

  bot.onText(/\/engage/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üí¨ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –í–û–í–õ–ï–ß–ï–ù–ò–ï...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ì–û –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –≤ Telegram:

1. –§–û–†–ú–ê–¢–´ –ö–û–ù–¢–ï–ù–¢–ê (—Ç–æ–ø-5):
   - –ö–∞–∫–∏–µ –ø–æ—Å—Ç—ã –ø–æ–ª—É—á–∞—é—Ç –±–æ–ª—å—à–µ —Ä–µ–∞–∫—Ü–∏–π
   - –ü—Ä–∏–º–µ—Ä—ã

2. –¢–†–ò–ì–ì–ï–†–´ –í–û–í–õ–ï–ß–ï–ù–ò–Ø:
   - –í–æ–ø—Ä–æ—Å—ã –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç
   - –ü—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é
   - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤

3. –í–†–ï–ú–Ø –ü–£–ë–õ–ò–ö–ê–¶–ò–ô:
   - –ö–æ–≥–¥–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–∞
   - –õ—É—á—à–∏–µ –¥–Ω–∏

4. –ß–ê–°–¢–û–¢–ê:
   - –°–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ
   - –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã

5. –û–ü–†–û–°–´ –ò QUIZ:
   - –¢–µ–º—ã –¥–ª—è –æ–ø—Ä–æ—Å–æ–≤
   - –ö–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É

6. –ö–û–ù–ö–£–†–°–´:
   - –ö–∞–∫ —á–∞—Å—Ç–æ –¥–µ–ª–∞—Ç—å
   - –ö–∞–∫–∏–µ –ø—Ä–∏–∑—ã

7. –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò:
   - –ö–∞–∫ —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—Å—É–∂–¥–µ–Ω–∏—è
   - –ù–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.75,
        max_tokens: 1200
      });

      const engagement = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üí¨ –°–¢–†–ê–¢–ï–ì–ò–Ø –í–û–í–õ–ï–ß–ï–ù–ò–Ø\n\n${engagement}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è.');
    }
  });

  bot.onText(/\/challenge/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üèÜ –°–æ–∑–¥–∞—é –ß–ï–õ–õ–ï–ù–î–ñ...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–°–æ–∑–¥–∞–π –í–ò–†–£–°–ù–´–ô –ß–ï–õ–õ–ï–ù–î–ñ –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:

1. –ö–û–ù–¶–ï–ü–¶–ò–Ø:
   - –ù–∞–∑–≤–∞–Ω–∏–µ —á–µ–ª–ª–µ–Ω–¥–∂–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ)
   - –°—É—Ç—å (—á—Ç–æ –¥–µ–ª–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º)
   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (7-30 –¥–Ω–µ–π)

2. –ú–ï–•–ê–ù–ò–ö–ê:
   - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
   - –ö–∞–∫ –æ—Ç—á–∏—Ç—ã–≤–∞—Ç—å—Å—è
   - –ö–∞–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å

3. –ú–û–¢–ò–í–ê–¶–ò–Ø:
   - –ü–æ—á–µ–º—É —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
   - –ß—Ç–æ –ø–æ–ª—É—á–∞—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∏
   - –ü—Ä–∏–∑—ã / –Ω–∞–≥—Ä–∞–¥—ã

4. –¢–ï–ö–°–¢ –ê–ù–û–ù–°–ê (400-500 —Å–∏–º–≤–æ–ª–æ–≤):
   - –ó–∞–≥–æ–ª–æ–≤–æ–∫
   - –£—Å–ª–æ–≤–∏—è
   - –ü—Ä–∏–∑—ã–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è

5. –í–ò–†–£–°–ù–û–°–¢–¨:
   - –ö–∞–∫ —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ—Å—Ç—ã
   - –•–µ—à—Ç–µ–≥ —á–µ–ª–ª–µ–Ω–¥–∂–∞
   - –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è

–ì–æ—Ç–æ–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂. –î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.9,
        max_tokens: 1000
      });

      const challenge = response.choices[0].message.content || '–û—à–∏–±–∫–∞';

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      userPosts.set(chatId, challenge);

      await bot!.sendMessage(chatId, `üèÜ –í–ò–†–£–°–ù–´–ô –ß–ï–õ–õ–ï–ù–î–ñ\n\n${challenge}\n\n‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!\n\nüí° –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:\n‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: /publish\n‚Ä¢ –ò–ª–∏ –Ω–∞–ø–∏—à–∏: "–æ–ø—É–±–ª–∏–∫—É–π"`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–ª–ª–µ–Ω–¥–∂–∞.');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
  bot.on('callback_query', async (callbackQuery) => {
    const msg = callbackQuery.message;
    const chatId = msg?.chat.id;
    const data = callbackQuery.data;

    if (!chatId) return;

    try {
      if (data === 'publish_contest') {
        await bot!.answerCallbackQuery(callbackQuery.id, {
          text: '‚úÖ –ö–æ–Ω–∫—É—Ä—Å –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!'
        });
        await bot!.sendMessage(chatId, 'üìù –ü—É–±–ª–∏–∫—É—é –∫–æ–Ω–∫—É—Ä—Å –≤ –∫–∞–Ω–∞–ª–µ...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      } else if (data === 'regenerate_contest') {
        await bot!.answerCallbackQuery(callbackQuery.id);
        await bot!.sendMessage(chatId, 'üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç...');
        // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback:', error);
    }
  });

  // ====================================
  // –¢–û–ü-5 –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í –û–¢ –ö–û–ù–ö–£–†–ï–ù–¢–û–í
  // ====================================
  // –ò—Å–ø–æ–ª—å–∑—É—é—Ç: Rayner Teo, Coin Bureau, The Trading Channel
  // –ò–∑–º–µ—Ä–∏–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: —Ä–æ—Å—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ, —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏

  // 1. –ì–û–õ–û–°–û–í–û–ï ‚Üí –ü–û–°–¢ (90% —Ç–æ–ø-–∫–∞–Ω–∞–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç)
  // –†–µ–∑—É–ª—å—Ç–∞—Ç: —ç–∫–æ–Ω–æ–º–∏—è 15 –º–∏–Ω –Ω–∞ –ø–æ—Å—Ç
  bot.on('voice', async (msg) => {
    const chatId = msg.chat.id;

    if (!checkRateLimit(chatId, 'ai')) {
      await bot!.sendMessage(chatId, '‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ AI –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.');
      return;
    }

    try {
      await bot!.sendMessage(chatId, 'üé§ –ü–æ–ª—É—á–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ! –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—é –∏ —Å–æ–∑–¥–∞—é –ø–æ—Å—Ç...');
      await bot!.sendChatAction(chatId, 'typing');

      // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Whisper API
      // –°–µ–π—á–∞—Å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      const prompt = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏. 
–°–æ–∑–¥–∞–π –≤–∏—Ä—É—Å–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è Telegram:
- –ù–∞—á–Ω–∏ —Å —ç–º–æ–¥–∑–∏ –∏ —Ö—É–∫–∞
- 300-400 —Å–∏–º–≤–æ–ª–æ–≤
- –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å
- –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
- 3-5 —Ö–µ—à—Ç–µ–≥–æ–≤`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 600
      });

      const post = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      userPosts.set(chatId, post);
      updateUserStats(chatId, 'ai');

      await bot!.sendMessage(chatId, `üé§ –ü–û–°–¢ –ò–ó –ì–û–õ–û–°–û–í–û–ì–û:\n\n${post}\n\n‚úÖ –ì–æ—Ç–æ–≤! /publish –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ.');
    }
  });

  // 2. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í ‚Üí –ò–î–ï–ò (—Ç–æ–ø-—Ñ–∏—á–∞ Coin Bureau)
  bot.onText(/\/analyze_comments/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üí¨ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–∏–ø–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ AI-–∫–∞–Ω–∞–ª–µ:
- "–ö–∞–∫ –Ω–∞—á–∞—Ç—å —Å ChatGPT?"
- "–ö–∞–∫–∏–µ –ø—Ä–æ–º–ø—Ç—ã –ª—É—á—à–µ?"
- "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ AI?"
- "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏?"
- "AI –∑–∞–º–µ–Ω–∏—Ç –º–µ–Ω—è –Ω–∞ —Ä–∞–±–æ—Ç–µ?"

–°–æ–∑–¥–∞–π 5 –∏–¥–µ–π –¥–ª—è –ø–æ—Å—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:
1. [–ò–¥–µ—è] - —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É: [–∫–∞–∫—É—é]
2. ...

–î–æ 600 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 700
      });

      const ideas = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üí¨ –ò–î–ï–ò –ò–ó –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í:\n\n${ideas}\n\nüí° –°–æ–∑–¥–∞–π –ø–æ—Å—Ç: /viral [—Ç–µ–º–∞]`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞.');
    }
  });

  // 3. –ê–í–¢–û–ì–ï–ù–ï–†–ê–¢–û–† –ö–ê–†–£–°–ï–õ–ò –¥–ª—è Instagram (–∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤—Å–µ —Ç–æ–ø-–±–ª–æ–≥–µ—Ä—ã)
  bot.onText(/\/carousel(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match && match[1] ? match[1] : 'AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã 2025';

    await bot!.sendMessage(chatId, 'üì∏ –°–æ–∑–¥–∞—é –∫–∞—Ä—É—Å–µ–ª—å –¥–ª—è Instagram...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–°–æ–∑–¥–∞–π —Ç–µ–∫—Å—Ç –¥–ª—è –ö–ê–†–£–°–ï–õ–ò Instagram –ø—Ä–æ "${topic}":

–°–õ–ê–ô–î 1 (–æ–±–ª–æ–∂–∫–∞):
- –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–∫—Ä—É–ø–Ω—ã–π —Ç–µ–∫—Å—Ç)
- –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
- –≠–º–æ–¥–∑–∏

–°–õ–ê–ô–î–´ 2-8:
–ö–∞–∂–¥—ã–π —Å–ª–∞–π–¥:
- –ù–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞
- –ö—Ä–∞—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ (3-5 —Å–ª–æ–≤)
- –û–ø–∏—Å–∞–Ω–∏–µ (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
- 1 —ç–º–æ–¥–∑–∏

–°–õ–ê–ô–î 9 (—Ñ–∏–Ω–∞–ª):
- –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
- –•–µ—à—Ç–µ–≥–∏ (10-15)

–§–æ—Ä–º–∞—Ç: –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–∞.
–î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 1000
      });

      const carousel = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üì∏ –ö–ê–†–£–°–ï–õ–¨ –î–õ–Ø INSTAGRAM:\n\n${carousel}\n\nüí° –ü–µ—Ä–µ–¥–∞–π –¥–∏–∑–∞–π–Ω–µ—Ä—É –∏–ª–∏ —Å–æ–∑–¥–∞–π –≤ Canva!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏.');
    }
  });

  // 4. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –°–ë–û–†–©–ò–ö –û–¢–ó–´–í–û–í ‚Üí –ö–û–ù–¢–ï–ù–¢ (Rayner Teo)
  bot.onText(/\/testimonials/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, '‚≠ê –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–°–æ–∑–¥–∞–π —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è AI-–∫–∞–Ω–∞–ª–∞:

1. –ö–ê–ö –°–û–ë–ò–†–ê–¢–¨:
   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –≤ Stories
   - –û–ø—Ä–æ—Å—ã –≤ –ø–æ—Å—Ç–∞—Ö
   - –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º

2. –í–û–ü–†–û–°–´ –î–õ–Ø –û–¢–ó–´–í–û–í (—Ç–æ–ø-5):
   - –ö–∞–∫–æ–π AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∏–∑–º–µ–Ω–∏–ª –≤–∞—à—É —Ä–∞–±–æ—Ç—É?
   - ...

3. –ö–ê–ö –ü–†–ï–í–†–ê–¢–ò–¢–¨ –í –ö–û–ù–¢–ï–ù–¢:
   - –§–æ—Ä–º–∞—Ç –ø–æ—Å—Ç–æ–≤ —Å –æ—Ç–∑—ã–≤–∞–º–∏
   - –ö–µ–π—Å—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
   - –¶–∏—Ç–∞—Ç—ã –¥–ª—è Stories

4. –¢–ï–ö–°–¢ –ó–ê–ü–†–û–°–ê –û–¢–ó–´–í–ê (–≥–æ—Ç–æ–≤—ã–π):
   "..."

–î–æ 700 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.75,
        max_tokens: 900
      });

      const strategy = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `‚≠ê –°–ò–°–¢–ï–ú–ê –°–ë–û–†–ê –û–¢–ó–´–í–û–í:\n\n${strategy}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.');
    }
  });

  // 5. –ì–û–õ–û–°–û–í–û–ô –û–¢–í–ï–¢ (The Trading Channel –∏—Å–ø–æ–ª—å–∑—É–µ—Ç)
  bot.onText(/\/voice_answer(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const question = match && match[1] ? match[1] : '';

    if (!question) {
      await bot!.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–æ–ø—Ä–æ—Å!\n\n–ü—Ä–∏–º–µ—Ä: /voice_answer –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ChatGPT?');
      return;
    }

    await bot!.sendMessage(chatId, 'üéôÔ∏è –°–æ–∑–¥–∞—é —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–°–æ–∑–¥–∞–π —Å–∫—Ä–∏–ø—Ç –ì–û–õ–û–°–û–í–û–ì–û –û–¢–í–ï–¢–ê –Ω–∞ –≤–æ–ø—Ä–æ—Å: "${question}"

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è —Ä–µ—á—å
- 30-60 —Å–µ–∫—É–Ω–¥ (150-300 —Å–ª–æ–≤)
- –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚Üí –æ—Ç–≤–µ—Ç ‚Üí –ø—Ä–∏–∑—ã–≤
- –ë–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
- –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ

–§–æ—Ä–º–∞—Ç: –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏.
–î–æ 500 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 600
      });

      const script = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üéôÔ∏è –°–ö–†–ò–ü–¢ –ì–û–õ–û–°–û–í–û–ì–û –û–¢–í–ï–¢–ê:\n\n${script}\n\nüí° –ó–∞–ø–∏—à–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ –∏ –æ—Ç–ø—Ä–∞–≤—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞.');
    }
  });

  // 6. –ú–£–õ–¨–¢–ò–§–û–†–ú–ê–¢–ù–´–ô –ü–û–°–¢ (1 –∫–æ–Ω—Ç–µ–Ω—Ç ‚Üí –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)
  bot.onText(/\/multipost(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match && match[1] ? match[1] : 'AI –≤ 2025';

    await bot!.sendMessage(chatId, 'üîÑ –°–æ–∑–¥–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –í–°–ï–• –ø–ª–∞—Ç—Ñ–æ—Ä–º...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ê–¥–∞–ø—Ç–∏—Ä—É–π —Ç–µ–º—É "${topic}" –ø–æ–¥ –í–°–ï –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:

üì± TELEGRAM (300-400 —Å–∏–º–≤–æ–ª–æ–≤):
[–ø–æ—Å—Ç —Å —ç–º–æ–¥–∑–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —Ö–µ—à—Ç–µ–≥–∏]

üì∏ INSTAGRAM (150-200 —Å–∏–º–≤–æ–ª–æ–≤):
[–∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—Ç, 10-15 —Ö–µ—à—Ç–µ–≥–æ–≤]

üéµ TIKTOK (—Å–∫—Ä–∏–ø—Ç 15-30 —Å–µ–∫):
[—Ö—É–∫ ‚Üí –∫–æ–Ω—Ç–µ–Ω—Ç ‚Üí –ø—Ä–∏–∑—ã–≤]

‚ñ∂Ô∏è YOUTUBE (–æ–ø–∏—Å–∞–Ω–∏–µ):
[SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å–∞–Ω–∏–µ 200 —Å–∏–º–≤–æ–ª–æ–≤, —Ç–µ–≥–∏]

–î–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤, –≥–æ—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.85,
        max_tokens: 1200
      });

      const multipost = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üîÑ –ö–û–ù–¢–ï–ù–¢ –î–õ–Ø –í–°–ï–• –ü–õ–ê–¢–§–û–†–ú:\n\n${multipost}\n\nüí° –ö–æ–ø–∏—Ä—É–π –∏ –ø—É–±–ª–∏–∫—É–π!`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º—É–ª—å—Ç–∏–ø–æ—Å—Ç–∞.');
    }
  });

  // 7. –≠–ö–°–ü–†–ï–°–°-–ê–£–î–ò–¢ –ö–ê–ù–ê–õ–ê (—á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—ã)
  bot.onText(/\/audit/, async (msg) => {
    const chatId = msg.chat.id;

    await bot!.sendMessage(chatId, 'üîç –ü—Ä–æ–≤–æ–∂—É —ç–∫—Å–ø—Ä–µ—Å—Å-–∞—É–¥–∏—Ç –∫–∞–Ω–∞–ª–∞...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const prompt = `–ü—Ä–æ–≤–µ–¥–∏ —ç–∫—Å–ø—Ä–µ—Å—Å-–ê–£–î–ò–¢ Telegram –∫–∞–Ω–∞–ª–∞ –ø—Ä–æ AI:

1. –ö–û–ù–¢–ï–ù–¢ (—á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å):
   - –†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–æ–≤
   - –ö–∞—á–µ—Å—Ç–≤–æ —Ö—É–∫–æ–≤
   - –ë–∞–ª–∞–Ω—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
   ‚úÖ –•–æ—Ä–æ—à–æ: ...
   ‚ùå –ü–ª–æ—Ö–æ: ...

2. –í–û–í–õ–ï–ß–ï–ù–ò–ï:
   - –û–ø—Ä–æ—Å—ã/–≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
   - –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
   - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤

3. –ü–†–û–î–í–ò–ù–ï–ù–ò–ï:
   - –ö—Ä–æ—Å—Å-–ø—Ä–æ–º–æ
   - –•–µ—à—Ç–µ–≥–∏
   - –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞

4. –¢–û–ü-3 –î–ï–ô–°–¢–í–ò–Ø –ü–†–Ø–ú–û –°–ï–ô–ß–ê–°:
   1. [–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ]
   2. ...
   3. ...

–î–æ 800 —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.75,
        max_tokens: 1000
      });

      const audit = response.choices[0].message.content || '–û—à–∏–±–∫–∞';
      await bot!.sendMessage(chatId, `üîç –≠–ö–°–ü–†–ï–°–°-–ê–£–î–ò–¢:\n\n${audit}`);
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∞—É–¥–∏—Ç–∞.');
    }
  });

  // ====================================
  // –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
  // ====================================

  bot.onText(/\/test/, async (msg) => {
    const chatId = msg.chat.id;

    const testReport = `üß™ –¢–ï–°–¢ –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò –ë–û–¢–ê

‚úÖ <b>–ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç
‚Ä¢ AI –º–æ–¥–µ–ª—å: Grok 2 –ø–æ–¥–∫–ª—é—á–µ–Ω–∞
‚Ä¢ –ö–∞–Ω–∞–ª: ${CHANNEL_ID}
‚Ä¢ Instance ID: ${botInstanceId?.substring(0, 16)}...

üìä <b>–°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:</b>
‚úÖ –ê–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è: ${isSchedulerPaused ? '–Ω–∞ –ø–∞—É–∑–µ' : '–∞–∫—Ç–∏–≤–Ω–∞'}
‚úÖ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: —Ä–∞–±–æ—Ç–∞–µ—Ç
‚úÖ Rate limiting: –∞–∫—Ç–∏–≤–µ–Ω
‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ: —Ä–∞–±–æ—Ç–∞–µ—Ç
‚úÖ –ö–æ–º–∞–Ω–¥—ã –º–µ–Ω—é: –¥–æ—Å—Ç—É–ø–Ω—ã
‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ

üéØ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (${28 + 2}):</b>
–ë–∞–∑–æ–≤—ã–µ: /start /menu /help
–ö–æ–Ω—Ç–µ–Ω—Ç: /ideas /viral /hashtags /hook /rewrite
–ü—É–±–ª–∏–∫–∞—Ü–∏—è: /publish /post /poll
–ê–Ω–∞–ª–∏—Ç–∏–∫–∞: /analytics /growth /report /mystats
–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ: /crosspromo /competitors /chatlist
–£—Ç–∏–ª–∏—Ç—ã: /schedule /pause /resume /settings
–î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: /niche /spy /trends /optimize /viralcheck /blueprint /autopilot
AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: /contest /quiz /magnet /boost /story /engage /challenge
–ù–æ–≤–æ–µ: /mystats /botstats

üí° <b>–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç:</b>
1. /viral - —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç
2. /publish - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
3. /mystats - —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

–í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! ‚úÖ`;

    await bot!.sendMessage(chatId, testReport, { parse_mode: 'HTML' });
  });

  // üìä –ü–ï–†–°–û–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
  bot.onText(/\/mystats/, async (msg) => {
    const chatId = msg.chat.id;
    const stats = userStats.get(chatId);

    if (!stats) {
      await bot!.sendMessage(chatId, 'üìä –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞!');
      return;
    }

    const report = `üìä –í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê

üë§ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –ö–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${stats.commands}
‚Ä¢ AI –∑–∞–ø—Ä–æ—Å–æ–≤: ${stats.aiRequests}
‚Ä¢ –ü–æ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: ${stats.postsCreated}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${stats.lastActive.toLocaleString('ru-RU')}

üèÜ <b>–í–∞—à —É—Ä–æ–≤–µ–Ω—å:</b>
${stats.commands < 10 ? 'üå± –ù–æ–≤–∏—á–æ–∫' : stats.commands < 50 ? '‚≠ê –ê–∫—Ç–∏–≤–Ω—ã–π' : stats.commands < 100 ? 'üî• –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π' : 'üëë –ú–∞—Å—Ç–µ—Ä'}

üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>
${stats.postsCreated < 5 ? '‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –±–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤ —Å /viral\n' : ''}${stats.aiRequests < 10 ? '‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤\n' : ''}${stats.commands < 20 ? '‚Ä¢ –ò–∑—É—á–∏—Ç–µ –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤ /menu\n' : ''}

üöÄ <b>–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å:</b>
${stats.commands < 50 ? `–í—ã–ø–æ–ª–Ω–∏—Ç–µ –µ—â–µ ${50 - stats.commands} –∫–æ–º–∞–Ω–¥ –¥–ª—è —É—Ä–æ–≤–Ω—è "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"` : '–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è! üéâ'}`;

    await bot!.sendMessage(chatId, report, { parse_mode: 'HTML' });
  });

  // ‚úçÔ∏è –ü–†–û–í–ï–†–ö–ê –ì–†–ê–ú–ú–ê–¢–ò–ö–ò (Grammarly-–ø–æ–¥–æ–±–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
  bot.onText(/\/grammar (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const text = match?.[1];

    if (!text) {
      await bot!.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!\n\n–ü—Ä–∏–º–µ—Ä: /grammar –≤–∞—à —Ç–µ–∫—Å—Ç');
      return;
    }

    if (!checkRateLimit(chatId, 'ai')) {
      await bot!.sendMessage(chatId, '‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ AI –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.');
      return;
    }

    await bot!.sendMessage(chatId, '‚úçÔ∏è –ü—Ä–æ–≤–µ—Ä—è—é –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏ —Å—Ç–∏–ª—å...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const { contentOptimizationService } = await import('./services/contentOptimization');
      const result = await contentOptimizationService.checkGrammarAndStyle(text);

      updateUserStats(chatId, 'ai');

      let response = `‚úçÔ∏è –ü–†–û–í–ï–†–ö–ê –ì–†–ê–ú–ú–ê–¢–ò–ö–ò\n\n`;
      response += `üìä <b>–û—Ü–µ–Ω–∫–∏:</b>\n`;
      response += `‚Ä¢ –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å: ${result.readabilityScore}/100\n`;
      response += `‚Ä¢ SEO: ${result.seoScore}/100\n\n`;

      if (result.grammarIssues.length > 0) {
        response += `‚ùå <b>–ù–∞–π–¥–µ–Ω–æ ${result.grammarIssues.length} –ø—Ä–æ–±–ª–µ–º:</b>\n\n`;
        result.grammarIssues.slice(0, 5).forEach((issue, i) => {
          response += `${i + 1}. ${issue.type}: "${issue.text}"\n`;
          response += `   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: "${issue.suggestion}"\n\n`;
        });
      } else {
        response += `‚úÖ <b>–ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!</b>\n\n`;
      }

      if (result.optimized !== text) {
        response += `üìù <b>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è:</b>\n"${result.optimized}"\n\n`;
      }

      if (result.suggestions.length > 0) {
        response += `üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n`;
        result.suggestions.forEach(s => response += `‚Ä¢ ${s}\n`);
      }

      await bot!.sendMessage(chatId, response, { parse_mode: 'HTML' });
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏.');
    }
  });

  // üìù TLDR - –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
  bot.onText(/\/tldr (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const text = match?.[1];

    if (!text) {
      await bot!.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è!\n\n–ü—Ä–∏–º–µ—Ä: /tldr –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç...');
      return;
    }

    if (!checkRateLimit(chatId, 'ai')) {
      await bot!.sendMessage(chatId, '‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ AI –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.');
      return;
    }

    await bot!.sendMessage(chatId, 'üìù –°–æ–∑–¥–∞—é –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const { contentOptimizationService } = await import('./services/contentOptimization');
      const result = await contentOptimizationService.generateTLDR(text);

      updateUserStats(chatId, 'ai');

      let response = `üìù <b>–ö–†–ê–¢–ö–û–ï –°–û–î–ï–†–ñ–ê–ù–ò–ï (TLDR)</b>\n\n`;
      response += `${result.summary}\n\n`;
      response += `üìå <b>–ö–ª—é—á–µ–≤—ã–µ –ø—É–Ω–∫—Ç—ã:</b>\n`;
      result.keyPoints.forEach((point, i) => {
        response += `${i + 1}. ${point}\n`;
      });
      response += `\n‚è± –í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: ${result.readingTime}`;

      await bot!.sendMessage(chatId, response, { parse_mode: 'HTML' });
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è.');
    }
  });

  // üéÆ –ì–ï–ô–ú–ò–§–ò–ö–ê–¶–ò–Ø - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω
  bot.onText(/\/gamify(?:\s+(.+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const topic = match && match[1] ? match[1] : 'AI –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏';

    if (!checkRateLimit(chatId, 'ai')) {
      await bot!.sendMessage(chatId, '‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ AI –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.');
      return;
    }

    await bot!.sendMessage(chatId, 'üéÆ –°–æ–∑–¥–∞—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É...');
    await bot!.sendChatAction(chatId, 'typing');

    try {
      const { contentOptimizationService } = await import('./services/contentOptimization');
      const result = await contentOptimizationService.generateGameContent('quiz', topic, 'medium');

      updateUserStats(chatId, 'ai');

      let response = `üéÆ <b>–í–ò–ö–¢–û–†–ò–ù–ê: ${topic}</b>\n\n`;
      
      if (result.questions) {
        result.questions.slice(0, 3).forEach((q, i) => {
          response += `<b>${i + 1}. ${q.question}</b>\n`;
          q.options.forEach((opt, idx) => {
            response += `${idx === q.correctAnswer ? '‚úÖ' : '‚ùå'} ${opt}\n`;
          });
          response += `üí° ${q.explanation}\n\n`;
        });
      }

      response += `üéÅ <b>–ù–∞–≥—Ä–∞–¥–∞:</b> ${result.reward}`;

      await bot!.sendMessage(chatId, response, { parse_mode: 'HTML' });
    } catch (error) {
      await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã.');
    }
  });

  // üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–¢–ê
  bot.onText(/\/botstats/, async (msg) => {
    const chatId = msg.chat.id;

    // –¢–æ–ø-5 –∫–æ–º–∞–Ω–¥
    const topCommands = Array.from(commandStats.entries())
      .sort((a, b) => b[1] - a[1])
      .slice(0, 5)
      .map(([cmd, count], i) => `${i + 1}. ${cmd} - ${count} —Ä–∞–∑`)
      .join('\n');

    const totalUsers = userStats.size;
    const totalCommands = Array.from(commandStats.values()).reduce((a, b) => a + b, 0);
    const totalAI = Array.from(userStats.values()).reduce((sum, s) => sum + s.aiRequests, 0);
    const totalPosts = Array.from(userStats.values()).reduce((sum, s) => sum + s.postsCreated, 0);

    const report = `üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–¢–ê

üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
‚Ä¢ –í—Å–µ–≥–æ: ${totalUsers}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: ${Array.from(userStats.values()).filter(s => 
      new Date().toDateString() === s.lastActive.toDateString()
    ).length}

üìä <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –ö–æ–º–∞–Ω–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${totalCommands}
‚Ä¢ AI –∑–∞–ø—Ä–æ—Å–æ–≤: ${totalAI}
‚Ä¢ –ü–æ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: ${totalPosts}
‚Ä¢ –†–∞–∑–º–µ—Ä –∫—ç—à–∞: ${responseCache.size}

üèÜ <b>–¢–û–ü-5 –ö–û–ú–ê–ù–î:</b>
${topCommands || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}

‚ö° <b>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b>
‚Ä¢ Rate limiting: –∞–∫—Ç–∏–≤–µ–Ω
‚Ä¢ –ö—ç—à-—Ö–∏—Ç—ã: ~${Math.round(responseCache.size / Math.max(totalAI, 1) * 100)}%
‚Ä¢ Instance: ${botInstanceId?.substring(0, 12)}...

üí° <b>–°–∏—Å—Ç–µ–º–∞:</b>
‚Ä¢ –ê–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è: ${isSchedulerPaused ? '‚è∏Ô∏è –ø–∞—É–∑–∞' : '‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç'}
‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 09:00, 15:00, 20:00`;

    await bot!.sendMessage(chatId, report, { parse_mode: 'HTML' });
  });

  // ====================================
  // AI –ê–°–°–ò–°–¢–ï–ù–¢ –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò
  // ====================================

  bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text || '';

    if (text.startsWith('/') || !text.trim()) {
      return;
    }

    console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${chatId}: ${text}`);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    const publishKeywords = ['–æ–ø—É–±–ª–∏–∫—É–π', '–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', '–ø—É–±–ª–∏–∫—É–π', '–æ–ø—É–±–ª—ñ–∫—É–π', 'publish'];
    const isPublishCommand = publishKeywords.some(keyword => 
      text.toLowerCase().includes(keyword)
    );

    if (isPublishCommand) {
      const savedPost = userPosts.get(chatId);

      if (!savedPost) {
        await bot!.sendMessage(chatId, '‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞!\n\nüí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –ø–æ—Å—Ç –∫–æ–º–∞–Ω–¥–æ–π /viral');
        return;
      }

      try {
        await bot!.sendMessage(chatId, 'üì§ –ü—É–±–ª–∏–∫—É—é –≤ –∫–∞–Ω–∞–ª...');
        await bot!.sendMessage(CHANNEL_ID, savedPost);
        await bot!.sendMessage(chatId, `‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ ${CHANNEL_ID}!`);

        updateUserStats(chatId, 'post');
        userPosts.delete(chatId);
        console.log(`‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${chatId}`);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', error);
        await bot!.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ.');
      }
      return;
    }

    // üõ°Ô∏è Rate limit –¥–ª—è AI –∑–∞–ø—Ä–æ—Å–æ–≤
    if (!checkRateLimit(chatId, 'ai')) {
      await bot!.sendMessage(chatId, '‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ AI –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É.\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ /menu –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.');
      return;
    }

    // üíæ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à –¥–ª—è —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    const cacheKey = text.toLowerCase().trim().substring(0, 100);
    const cachedResponse = getCachedResponse(cacheKey);

    if (cachedResponse) {
      await bot!.sendMessage(chatId, `${cachedResponse}\n\n‚ö° (–∏–∑ –∫—ç—à–∞)`);
      console.log(`üíæ –û—Ç–≤–µ—Ç –∏–∑ –∫—ç—à–∞ –¥–ª—è ${chatId}`);
      return;
    }

    // AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    try {
      await bot!.sendChatAction(chatId, 'typing');
      updateUserStats(chatId, 'ai');

      const prompt = `–¢—ã AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é Telegram. –ö–∞–Ω–∞–ª: ${CHANNEL_ID}. –í–æ–ø—Ä–æ—Å: "${text}". –î–∞–π –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, —ç–º–æ–¥–∑–∏. –ú–∞–∫—Å 500 —Å–∏–º–≤–æ–ª–æ–≤.`;

      const response = await grok.chat.completions.create({
        model: 'grok-2-latest',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.8,
        max_tokens: 600
      });

      const answer = response.choices[0].message.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help';

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
      setCachedResponse(cacheKey, answer);

      await bot!.sendMessage(chatId, answer);
      console.log(`‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ${chatId}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:', error);
      await bot!.sendMessage(chatId, '‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help');
    }
  });

  console.log('üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: 09:00, 15:00, 20:00 (–ø–æ—Å—Ç—ã), 12:00 –ü–Ω/–ß—Ç (–æ–ø—Ä–æ—Å—ã)');
  console.log('üí° –ö–æ–º–∞–Ω–¥—ã: /start /menu /help');
  console.log('üî• –†–µ–∂–∏–º –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: /niche /spy /trends /viralcheck /blueprint');
  console.log('ü§ñ AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', error);
    bot = null;
  } finally {
    isStarting = false;
  }
}

// –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
export async function stopTelegramBot() {
  if (bot) {
    console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram –±–æ—Ç–∞...');
    try {
      await bot.stopPolling({ cancel: true, reason: 'Server shutdown' });
    } catch (e) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    }
    bot = null;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
process.on('SIGINT', async () => {
  await stopTelegramBot();
  process.exit(0);
});

process.on('SIGTERM', async () => {
  await stopTelegramBot();
  process.exit(0);
});